{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Interpretador de C desenvolvido em Python","text":"<p> Desenvolvimento de um interpretador de C desenvolvido em python como parte da disciplina de Compiladores I, na Faculdade de Ci\u00eancia, Tecnologia e Engenharia (FCTE) da Universidade de Bras\u00edlia (UnB) pelo grupo CobraCai. </p> <p>  Utilizamos o reposit\u00f3rio para compor nosso projeto final bem como as atividades realizadas na disciplina semanalmente. </p>"},{"location":"#integrantes-da-equipe","title":"Integrantes da Equipe:","text":"<sub>Felipe das Neves</sub> <sub>Breno Alexandre</sub> <sub>Julio Cesar</sub> <sub>Lucas Soares</sub> <sub>Kaleb de Souza</sub> <sub>Othavio Araujo</sub>"},{"location":"atas-reuniao/ata-reuniao-1/","title":"Ata de Reuni\u00e3o 01","text":"<p>Data: 26/03/2025  </p> <p>Hora Prevista: 14:00 - 16:00 Hora Realizada: 14:00 - 16:00  Local: Presencial </p> <p>Redator: Kaleb Macedo</p>"},{"location":"atas-reuniao/ata-reuniao-1/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre \u2714\ufe0f Julio Cesar \u2714\ufe0f Lucas Soares \u2714\ufe0f Kaleb de Macedo \u2714\ufe0f Oth\u00e1vio Araujo \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-1/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Estrutura de projeto para o compilador foi definida:</li> <li>Pasta para analisador l\u00e9xico (<code>lex</code> ou <code>lexer</code>)</li> <li>Pasta para analisador sint\u00e1tico (<code>parser</code>)</li> <li>Pasta para testes</li> <li>Pasta para artefatos compilados (<code>build</code> ou <code>bin</code>)</li> <li>Implementado controle de vers\u00e3o com uso de <code>Git</code>, com reposit\u00f3rios no GitHub/GitLab e uso de conven\u00e7\u00f5es de <code>commit</code> e <code>branching</code>.</li> <li>Realiza\u00e7\u00e3o de primeiros testes com <code>flex</code> + <code>bison</code>:</li> <li>Analisador l\u00e9xico m\u00ednimo que identifica tokens como <code>Hello</code> e <code>World</code></li> <li>Integra\u00e7\u00e3o com o parser e gera\u00e7\u00e3o de sa\u00edda para confirma\u00e7\u00e3o</li> <li>Verifica\u00e7\u00e3o de compila\u00e7\u00e3o e execu\u00e7\u00e3o</li> <li>An\u00e1lise dos arquivos <code>hello.l</code> e <code>hello.y</code></li> </ul>"},{"location":"atas-reuniao/ata-reuniao-1/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>O teste com <code>hello.l</code> e <code>hello.y</code> \u00e9 obrigat\u00f3rio para todos os integrantes do grupo.</li> <li>Possivelmente ser\u00e1 criado um Interpretador.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-1/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>02/04/2025 \u00e0s 14h</p>"},{"location":"atas-reuniao/ata-reuniao-1/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 24/04/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 01 Kaleb Macedo"},{"location":"atas-reuniao/ata-reuniao-10/","title":"Ata de Reuni\u00e3o 10","text":"<p>Data: 11/06/2025  </p> <p>Hora Prevista: 14:00 - 16:00 Hora Realizada: 14:20 - 15:50 Local: Presencial</p>"},{"location":"atas-reuniao/ata-reuniao-10/#participantes","title":"Participantes","text":"<p><p>Tabela 3: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre x Julio Cesar \u2714\ufe0f Lucas Soares \u2714\ufe0f Kaleb de Souza \u2714\ufe0f Othavio Araujo \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-10/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Revis\u00e3o geral do c\u00f3digo-fonte final do interpretador.</li> <li>Alinhamento do projeto com os conceitos te\u00f3ricos das aulas.</li> <li>Refatora\u00e7\u00e3o e adi\u00e7\u00e3o de coment\u00e1rios para melhorar a legibilidade.</li> <li>Planejamento dos passos finais antes da entrega.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-10/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>O c\u00f3digo-fonte ser\u00e1 revisado em duplas para garantir a qualidade.</li> <li>O projeto ser\u00e1 unificado para garantir que a vers\u00e3o final esteja coesa.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-10/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>A ser definida para os preparativos da apresenta\u00e7\u00e3o final.</p>"},{"location":"atas-reuniao/ata-reuniao-10/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 20/05/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 10 Kaleb de Souza <p>Resumo: Definido o plano de a\u00e7\u00e3o para o refinamento e documenta\u00e7\u00e3o final do c\u00f3digo.</p>"},{"location":"atas-reuniao/ata-reuniao-2/","title":"Ata de Reuni\u00e3o 02","text":"<p>Data: 02/04/2025  </p> <p>Hora Prevista: 14:00 - 16:00 Hora Realizada: 14:00 - 16:00 Local: Presencial</p>"},{"location":"atas-reuniao/ata-reuniao-2/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre \u2714\ufe0f Julio Cesar \u2714\ufe0f Lucas Soares \u2714\ufe0f Kaleb Macedo \u2714\ufe0f Othavio Araujo \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-2/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Estudo pr\u00e1tico sobre a constru\u00e7\u00e3o de analisadores l\u00e9xicos utilizando a ferramenta Flex.</li> <li>Revis\u00e3o da estrutura de um arquivo <code>.l</code>, contendo regras de token e a\u00e7\u00f5es correspondentes.</li> <li>Gera\u00e7\u00e3o de c\u00f3digo C para an\u00e1lise l\u00e9xica a partir de arquivos <code>.l</code>.</li> <li>Desenvolvimento pr\u00e1tico de um analisador l\u00e9xico em <code>scanner.l</code>, configurado para reconhecer:</li> <li>Identificadores</li> <li>N\u00fameros inteiros</li> <li>Espa\u00e7os em branco</li> <li>Discutidas boas pr\u00e1ticas para implementa\u00e7\u00e3o:</li> <li>Testes incrementais para cada nova regra</li> <li>Implementa\u00e7\u00e3o de tratamento de erro (para caracteres inv\u00e1lidos)</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-2/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>O uso da ferramenta <code>flex</code> ser\u00e1 adotado oficialmente para o projeto do interpretador.</li> <li>Todos os integrantes devem desenvolver individualmente um <code>scanner.l</code> funcional.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-2/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>09/04/2025 \u00e0s 14h</p>"},{"location":"atas-reuniao/ata-reuniao-2/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 25/04/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 02 Kaleb Macedo"},{"location":"atas-reuniao/ata-reuniao-3/","title":"Ata de Reuni\u00e3o 03","text":"<p>Data: 09/04/2025  </p> <p>Hora Prevista: 14:00 - 16:00 Hora Realizada: 14:00 at\u00e9 16:00 Local: Presencial</p>"},{"location":"atas-reuniao/ata-reuniao-3/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre \u2714\ufe0f Julio Cesar \u2714\ufe0f Lucas Soares \u2714\ufe0f Kaleb Macedo \u2714\ufe0f Othavio Araujo \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-3/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Iniciada a fase de constru\u00e7\u00e3o do interpretador, com foco na an\u00e1lise l\u00e9xica.</li> <li>Revis\u00e3o dos conceitos de tokens e defini\u00e7\u00e3o dos tokens do projeto: identificadores, n\u00fameros, palavras-chave e s\u00edmbolos.</li> <li>Cria\u00e7\u00e3o de um arquivo l\u00e9xico <code>scanner.l</code> com base na ferramenta Flex.</li> <li>Implementado o tratamento de coment\u00e1rios do tipo <code>//</code> (linha) e <code>/* */</code> (bloco).</li> <li>Execu\u00e7\u00e3o do scanner com os comandos:</li> <li><code>flex scanner.l</code></li> <li><code>gcc -o scanner lex.yy.c</code></li> <li><code>./scanner</code></li> <li>Testes realizados com entradas curtas para identificar os tokens e validar se est\u00e3o corretamente reconhecidos.</li> <li>Observada a necessidade de ajustar regras para operadores e caracteres especiais.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-3/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>Confirmado uso de Flex como ferramenta oficial para a an\u00e1lise l\u00e9xica.</li> <li>O scanner deve ser personalizado conforme a linguagem-alvo de cada grupo.</li> <li>Todos devem implementar tratamento para erros e coment\u00e1rios no scanner.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-3/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>29/04/2025 \u00e0s 22h</p>"},{"location":"atas-reuniao/ata-reuniao-3/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 25/04/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 03 (fase l\u00e9xica) Kaleb Macedo"},{"location":"atas-reuniao/ata-reuniao-4/","title":"Ata de Reuni\u00e3o 04","text":"<p>Data: 23/04/2025  </p> <p>Hora Prevista: 12:00 at\u00e9 13:00 Hora Realizada: 12:30 at\u00e9 14:00 Local: Presencial</p>"},{"location":"atas-reuniao/ata-reuniao-4/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre \u2714\ufe0f Julio Cesar \u2714\ufe0f Lucas Soares \u2714\ufe0f Kaleb de Souza \u2714\ufe0f Othavio Araujo \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-4/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Realizado alinhamento geral do projeto do interpretador.</li> <li>Relembrar dos objetivos, entregas esperadas e prazos.</li> <li>Divis\u00e3o de responsabilidades entre os membros do grupo.</li> <li>Defini\u00e7\u00e3o de tarefas espec\u00edficas com base na estrutura modular do projeto.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-4/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>Reuni\u00e3o voltada para organiza\u00e7\u00e3o do projeto e divis\u00e3o de tarefas. Alinhamento essencial para  garantir que todos os m\u00f3dulos sejam entregues no prazo e com clareza sobre as responsabilidades.</li> <li>Todos devem manter os commits atualizados e com mensagens claras no reposit\u00f3rio do GitHub.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-4/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>30/04/2025 \u00e0s 22h</p>"},{"location":"atas-reuniao/ata-reuniao-4/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 25/04/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 04 de alinhamento Kaleb Macedo <p>Resumo: Reuni\u00e3o voltada para organiza\u00e7\u00e3o do projeto e divis\u00e3o de tarefas. Alinhamento essencial para garantir que todos os m\u00f3dulos sejam entregues no prazo e com clareza sobre as responsabilidades.</p>"},{"location":"atas-reuniao/ata-reuniao-5/","title":"Ata de Reuni\u00e3o 05","text":"<p>Data: 26/04/2025  </p> <p>Hora Prevista: 12:00 at\u00e9 13:00 Hora Realizada: 13:30 at\u00e9 16:00 Local: Remoto - Teams</p>"},{"location":"atas-reuniao/ata-reuniao-5/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Lucas Soares \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-5/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Qual bilbioteca vamos utilizar para fazer o interpretador e com base no lexer e o parse utilizados nos estudos utilizando o flex e o bison migra pro python.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-5/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>Decidimos usar o ply como biblioteca e j\u00e1 inplementamos a tabela de simbolos junto com as palavras resevadas do C.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-5/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>27/04/2025 \u00e0s 13h</p>"},{"location":"atas-reuniao/ata-reuniao-5/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 27/04/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 05 de desenvolvimento Kaleb Macedo <p>Resumo: Reuni\u00e3o voltada para o desenvolvimento do interpretador aplicando os conceitos estudados anterior mente com o conte\u00fado do professor, no nosso interpretado em python utilizando o ply.</p>"},{"location":"atas-reuniao/ata-reuniao-6/","title":"Ata de Reuni\u00e3o 06","text":"<p>Data: 14/05/2025  </p> <p>Hora Prevista: 12:00 at\u00e9 13:00 Hora Realizada: 13:30 at\u00e9 16:00 Local: Presencial</p>"},{"location":"atas-reuniao/ata-reuniao-6/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre \u2714\ufe0f Julio Cesar \u2714\ufe0f Lucas Soares \u2714\ufe0f Kaleb de Souza \u2714\ufe0f Othavio Araujo \u2714\ufe0f <p><p>Fonte: Felipe das Neves, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-6/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Como vamos mostrar o resultado da leitura do interpretador;</li> <li>Testes manuais do la\u00e7o se esta tudo ok;</li> <li>Inicio da implementa\u00e7\u00e3o do while.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-6/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>Decidimos o modelo de sa\u00edda dos dados;</li> <li>Verificamos que est\u00e1 funcionando o la\u00e7o if e else</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-6/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>30/04/2025 \u00e0s 16:30h</p>"},{"location":"atas-reuniao/ata-reuniao-6/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 27/04/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 06 de desenvolvimento Felipe das Neves <p>Resumo: Reuni\u00e3o voltada para a implementa\u00e7\u00e3o do la\u00e7o if e else no interpretador.</p>"},{"location":"atas-reuniao/ata-reuniao-7/","title":"Ata de Reuni\u00e3o 07","text":"<p>Data: 29/04/2025  </p> <p>Hora Prevista: 20:00 - 21:00 Hora Realizada: 20:10 - 21:30 Local: Remoto - Discord</p>"},{"location":"atas-reuniao/ata-reuniao-7/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre \u274c Julio Cesar \u274c Lucas Soares \u274c Kaleb Macedo \u2714\ufe0f Othavio Araujo \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-7/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Quem iria apresentar o projeto;</li> <li>Quem iria fazer os slides;</li> <li>Como vamos fazer o formulario</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-7/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>Fizemos juntos o formulario do prof utilizando o google docs;</li> <li>Kaleb se propos em fazer o slide e apresentar com o Breno.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-7/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>09/04/2025 \u00e0s 14h</p>"},{"location":"atas-reuniao/ata-reuniao-7/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 29/04/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 07 Kaleb Macedo <p>Resumo: Responder o formul\u00e1rio do professor.</p>"},{"location":"atas-reuniao/ata-reuniao-8/","title":"Ata de Reuni\u00e3o 08","text":"<p>Data: 28/05/2025  </p> <p>Hora Prevista: 14:00 - 16:00 Hora Realizada: 14:15 - 15:45 Local: Presencial</p>"},{"location":"atas-reuniao/ata-reuniao-8/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre \u2714\ufe0f Julio Cesar \u2714\ufe0f Lucas Soares \u2714\ufe0f Kaleb de Souza \u2714\ufe0f Othavio Araujo \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-8/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Revis\u00e3o da estrutura atual da \u00c1rvore Sint\u00e1tica Abstrata (AST).</li> <li>Identifica\u00e7\u00e3o de pontos para melhoria e otimiza\u00e7\u00e3o da estrutura.</li> <li>Divis\u00e3o de tarefas para implementar as melhorias na AST.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-8/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>A AST ser\u00e1 refatorada para incluir n\u00f3s mais espec\u00edficos, melhorando a representa\u00e7\u00e3o do c\u00f3digo.</li> <li>Os novos n\u00f3s definidos para a AST ser\u00e3o implementados.</li> <li>O analisador sint\u00e1tico ser\u00e1 ajustado para gerar a nova estrutura da AST.</li> <li>As altera\u00e7\u00f5es na estrutura da AST ser\u00e3o documentadas.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-8/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>13/05/2025 \u00e0s 14h</p>"},{"location":"atas-reuniao/ata-reuniao-8/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 06/05/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 08 Kaleb de Souza <p>Resumo: Defini\u00e7\u00e3o e distribui\u00e7\u00e3o das tarefas para a refatora\u00e7\u00e3o e melhoria da AST.</p>"},{"location":"atas-reuniao/ata-reuniao-9/","title":"Ata de Reuni\u00e3o 09","text":"<p>Data: 04/06/2025  </p> <p>Hora Prevista: 14:00 - 16:00 Hora Realizada: 14:00 - 16:10 Local: Presencial</p>"},{"location":"atas-reuniao/ata-reuniao-9/#participantes","title":"Participantes","text":"<p><p>Tabela 2: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Breno Alexandre x Julio Cesar \u2714\ufe0f Lucas Soares \u2714\ufe0f Kaleb de Souza \u2714\ufe0f Othavio Araujo \u2714\ufe0f <p><p>Fonte: Kaleb Macedo, 2025.</p></p>"},{"location":"atas-reuniao/ata-reuniao-9/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Defini\u00e7\u00e3o da estrat\u00e9gia de testes para o Interpretador.</li> <li>Brainstorming sobre quais casos de teste s\u00e3o necess\u00e1rios para garantir a corretude.</li> <li>Divis\u00e3o da cria\u00e7\u00e3o dos arquivos de teste.</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-9/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>Um script para automatizar a execu\u00e7\u00e3o dos testes ser\u00e1 criado.</li> <li>Ser\u00e3o criados casos de teste para cobrir express\u00f5es matem\u00e1ticas e l\u00f3gicas.</li> <li>Tamb\u00e9m ser\u00e3o criados casos de teste para as estruturas de controle de fluxo (if, while).</li> </ul>"},{"location":"atas-reuniao/ata-reuniao-9/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>20/05/2025 \u00e0s 14h</p>"},{"location":"atas-reuniao/ata-reuniao-9/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 13/05/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 09 Kaleb de Souza <p>Resumo: Planejamento e delega\u00e7\u00e3o da cria\u00e7\u00e3o dos testes para o Interpretador.</p>"},{"location":"atas-reuniao/ata-reunicao-6/","title":"Ata de Reuni\u00e3o 06","text":"<p>Data: 27/04/2025  </p> <p>Hora Prevista: 12:00 at\u00e9 13:00 Hora Realizada: 13:30 at\u00e9 16:00 Local: Remoto - Discord</p>"},{"location":"atas-reuniao/ata-reunicao-6/#participantes","title":"Participantes","text":"<p><p>Tabela 1: Presen\u00e7a</p></p> Nome Presen\u00e7a Felipe das Neves \u2714\ufe0f Othavio Bolzan \u2714\ufe0f J\u00falio Cesar \u2714\ufe0f <p><p>Fonte: Felipe das Neves, 2025.</p></p>"},{"location":"atas-reuniao/ata-reunicao-6/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Como vamos mostrar o resultado da leitura do interpretador;</li> <li>Testes manuais do la\u00e7o se esta tudo ok;</li> <li>Inicio da implementa\u00e7\u00e3o do while.</li> </ul>"},{"location":"atas-reuniao/ata-reunicao-6/#decisoes","title":"Decis\u00f5es:","text":"<ul> <li>Decidimos o modelo de sa\u00edda dos dados;</li> <li>Verificamos que est\u00e1 funcionando o la\u00e7o if e else</li> </ul>"},{"location":"atas-reuniao/ata-reunicao-6/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>30/04/2025 \u00e0s 16:30h</p>"},{"location":"atas-reuniao/ata-reunicao-6/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 27/04/2025 Cria\u00e7\u00e3o da ata da reuni\u00e3o 06 de desenvolvimento Felipe das Neves <p>Resumo: Reuni\u00e3o voltada para a implementa\u00e7\u00e3o do la\u00e7o if e else no interpretador.</p>"},{"location":"documento-aula/documento-aula1/","title":"Semana 1 - Pr\u00e1tica: Configura\u00e7\u00e3o do Ambiente de Desenvolvimento","text":""},{"location":"documento-aula/documento-aula1/#ferramentas-basicas","title":"Ferramentas B\u00e1sicas","text":"<ul> <li>Flex ou Lex (analisador l\u00e9xico)</li> <li>Bison ou Yacc (gerador de parser sint\u00e1tico)</li> <li>ANTLR (ferramenta alternativa que combina an\u00e1lise l\u00e9xica e sint\u00e1tica)</li> <li>Editor/IDE: Visual Studio Code, Eclipse, CLion ou outros</li> <li>Compilador de apoio: <code>gcc</code>, <code>clang</code>, etc.</li> </ul>"},{"location":"documento-aula/documento-aula1/#instalacao-e-configuracao-linux","title":"Instala\u00e7\u00e3o e Configura\u00e7\u00e3o (Linux)","text":"<ul> <li>Atualizar reposit\u00f3rio:   <code>bash   sudo apt-get update</code></li> <li>Instalar ferramentas:   <code>bash   sudo apt-get install flex bison</code></li> <li>Verificar vers\u00f5es:   <code>bash   flex --version   bison --version</code></li> </ul>"},{"location":"documento-aula/documento-aula1/#instalacao-e-configuracao-windows","title":"Instala\u00e7\u00e3o e Configura\u00e7\u00e3o (Windows)","text":"<ul> <li>Usar MSYS2, Cygwin ou WSL (Windows Subsystem for Linux)</li> <li>Instalar <code>flex</code> e <code>bison</code> via gerenciadores de pacotes compat\u00edveis</li> </ul>"},{"location":"documento-aula/documento-aula1/#estrutura-de-projeto","title":"Estrutura de Projeto","text":"<ul> <li>Pasta para analisador l\u00e9xico (<code>lex/lexer</code>)</li> <li>Pasta para analisador sint\u00e1tico (<code>parser</code>)</li> <li>Pasta para testes</li> <li>Pasta para artefatos compilados (<code>build/bin</code>)</li> </ul>"},{"location":"documento-aula/documento-aula1/#controle-de-versao","title":"Controle de Vers\u00e3o","text":"<ul> <li>Uso de Git e GitHub/GitLab</li> <li>Conven\u00e7\u00f5es de commit e branching</li> </ul>"},{"location":"documento-aula/documento-aula1/#primeiros-testes","title":"Primeiros Testes","text":"<ul> <li>Testar o exemplo <code>hello.*</code> (\"Hello, World!\") usando flex + bison:</li> <li>Criar analisador l\u00e9xico m\u00ednimo (tokens de <code>Hello</code> e <code>World</code>)</li> <li>Integrar no parser e gerar sa\u00edda confirmando os tokens</li> <li>Verificar compila\u00e7\u00e3o e execu\u00e7\u00e3o</li> <li>Analisar os c\u00f3digos <code>hello.l</code> e <code>hello.y</code></li> </ul>"},{"location":"documento-aula/documento-aula1/#atividade-pbl-do-dia","title":"Atividade PBL do Dia","text":"<p>Objetivo: Garantir que todos os grupos tenham um ambiente de desenvolvimento funcional.</p> <p>Tarefas:</p> <ol> <li>Verificar instala\u00e7\u00e3o das ferramentas</li> <li>Criar reposit\u00f3rio Git para o projeto do compilador</li> <li>Subir um teste simples de analisador l\u00e9xico ou parser</li> </ol> <p>Entrega: Apresenta\u00e7\u00e3o de evid\u00eancias do funcionamento do setup (prints ou demonstra\u00e7\u00e3o).</p>"},{"location":"documento-aula/documento-aula1/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 28/04/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 1 J\u00falio Cesar"},{"location":"documento-aula/documento-aula10/","title":"Compiladores 1 - Semana 10: Pr\u00e1tica","text":""},{"location":"documento-aula/documento-aula10/#geracao-de-codigo-final-bitcode","title":"Gera\u00e7\u00e3o de C\u00f3digo Final (Bitcode)","text":""},{"location":"documento-aula/documento-aula10/#objetivos-da-pratica","title":"Objetivos da Pr\u00e1tica","text":"<ul> <li>Implementar reconhecimento de express\u00f5es Java simples usando Flex+Bison</li> <li>Gerar c\u00f3digo intermedi\u00e1rio em formato bitcode textual</li> <li>Automatizar o processo de compila\u00e7\u00e3o e testes via Makefile</li> <li>Compreender o mapeamento entre opera\u00e7\u00f5es da linguagem fonte e instru\u00e7\u00f5es de bitcode</li> <li>Validar a correta gera\u00e7\u00e3o de c\u00f3digo atrav\u00e9s de testes automatizados</li> </ul>"},{"location":"documento-aula/documento-aula10/#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<pre><code>projeto/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 lexer.l      # Especifica\u00e7\u00e3o do analisador l\u00e9xico\n\u2502   \u251c\u2500\u2500 parser.y     # Especifica\u00e7\u00e3o do analisador sint\u00e1tico\n\u2502   \u251c\u2500\u2500 ast.c/h      # Implementa\u00e7\u00e3o da AST\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 *.java       # Casos de teste em Java\n\u251c\u2500\u2500 Makefile         # Automa\u00e7\u00e3o do build\n\u251c\u2500\u2500 README.md        # Documenta\u00e7\u00e3o do projeto\n</code></pre> <p>Artefatos gerados: - Execut\u00e1vel: <code>./generate</code> (compilador que gera bitcode) - Arquivos tempor\u00e1rios durante a compila\u00e7\u00e3o</p>"},{"location":"documento-aula/documento-aula10/#fluxo-de-trabalho","title":"Fluxo de Trabalho","text":"<ol> <li> <p>Compila\u00e7\u00e3o: <code>bash    make        # Gera o compilador completo</code></p> </li> <li> <p>Execu\u00e7\u00e3o de Testes: <code>bash    make test   # Roda todos os casos de teste</code></p> </li> <li> <p>Limpeza: <code>bash    make clean  # Remove arquivos gerados</code></p> </li> </ol> <p>Exemplo de Teste:</p> <ul> <li> <p>Entrada (<code>tests/sum.java</code>):     <code>java     int x = 3 + 4;</code></p> </li> <li> <p>Sa\u00edda (bitcode gerado):     <code>LOAD_CONST 3     LOAD_CONST 4     ADD     STORE x</code></p> </li> </ul>"},{"location":"documento-aula/documento-aula10/#tarefas-praticas","title":"Tarefas Pr\u00e1ticas","text":""},{"location":"documento-aula/documento-aula10/#exploracao-do-codigo","title":"Explora\u00e7\u00e3o do C\u00f3digo:","text":"<ul> <li>Analisar e modificar os exemplos existentes</li> <li>Compreender a rela\u00e7\u00e3o entre gram\u00e1tica e gera\u00e7\u00e3o de c\u00f3digo</li> </ul>"},{"location":"documento-aula/documento-aula10/#expansao-de-testes","title":"Expans\u00e3o de Testes:","text":"<ul> <li>Adicionar novos casos de teste em <code>tests/*.java</code></li> <li>Verificar a correta gera\u00e7\u00e3o de bitcode</li> </ul>"},{"location":"documento-aula/documento-aula10/#desenvolvimento-do-projeto","title":"Desenvolvimento do Projeto:","text":"<ul> <li>Implementar novas funcionalidades no compilador da equipe</li> <li>Documentar as decis\u00f5es de implementa\u00e7\u00e3o</li> </ul>"},{"location":"documento-aula/documento-aula10/#versionamento","title":"Versionamento:","text":"<pre><code>git add .\ngit commit -m \"Implementa gera\u00e7\u00e3o de bitcode para express\u00f5es aritm\u00e9ticas\"\ngit push origin main\n</code></pre>"},{"location":"documento-aula/documento-aula10/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 01/06/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 10 J\u00falio Cesar"},{"location":"documento-aula/documento-aula2/","title":"Semana 2 - Pr\u00e1tica: Constru\u00e7\u00e3o de Analisador L\u00e9xico Simples","text":""},{"location":"documento-aula/documento-aula2/#objetivos-da-aula","title":"Objetivos da Aula","text":"<ul> <li>Aplicar conceitos de aut\u00f4matos e express\u00f5es regulares para identificar tokens</li> <li>Apresentar ferramentas de an\u00e1lise l\u00e9xica (ex.: flex, bison, etc.)</li> <li>Implementar um scanner simples para uma linguagem de exemplo</li> </ul>"},{"location":"documento-aula/documento-aula2/#revisao-expressoes-regulares","title":"Revis\u00e3o: Express\u00f5es Regulares","text":""},{"location":"documento-aula/documento-aula2/#definicao","title":"Defini\u00e7\u00e3o","text":"<ul> <li>Nota\u00e7\u00e3o formal para descrever padr\u00f5es em cadeias de caracteres</li> </ul>"},{"location":"documento-aula/documento-aula2/#simbolos-basicos","title":"S\u00edmbolos B\u00e1sicos","text":"<ul> <li>\u03a3: alfabeto</li> <li>Operadores: <code>*</code>, <code>+</code>, <code>?</code>, <code>|</code>, <code>()</code></li> </ul> <p>Consulte o \"Guia r\u00e1pido de express\u00f5es regulares\" no GitHub da disciplina (semana 02).</p>"},{"location":"documento-aula/documento-aula2/#exemplo","title":"Exemplo","text":"<ul> <li><code>[a-zA-Z_][a-zA-Z0-9_]*</code> representa identificadores simples em muitas linguagens</li> </ul>"},{"location":"documento-aula/documento-aula2/#fluxo-de-um-analisador-lexico","title":"Fluxo de um Analisador L\u00e9xico","text":"<ol> <li>Leitura da entrada caractere a caractere</li> <li>Reconhecimento de tokens com base em padr\u00f5es (ER)</li> <li>Produ\u00e7\u00e3o de tokens para a an\u00e1lise sint\u00e1tica</li> <li>Tratamento de erros l\u00e9xicos (s\u00edmbolos inesperados)</li> </ol>"},{"location":"documento-aula/documento-aula2/#fluxo-de-criacao-e-execucao-do-exemplo","title":"Fluxo de Cria\u00e7\u00e3o e Execu\u00e7\u00e3o do Exemplo","text":"<ul> <li>Defini\u00e7\u00e3o de regras em arquivo <code>.l</code></li> <li>Gera\u00e7\u00e3o de c\u00f3digo em C</li> <li>Compila\u00e7\u00e3o e execu\u00e7\u00e3o do scanner</li> </ul>"},{"location":"documento-aula/documento-aula2/#ferramentas-e-pratica","title":"Ferramentas e Pr\u00e1tica","text":""},{"location":"documento-aula/documento-aula2/#exemplo-de-ferramenta-flex","title":"Exemplo de Ferramenta (flex)","text":"<ul> <li>Arquivo <code>.l</code> com regras de token e a\u00e7\u00f5es</li> <li>Gera\u00e7\u00e3o do arquivo em C para a etapa de an\u00e1lise l\u00e9xica</li> </ul>"},{"location":"documento-aula/documento-aula2/#exercicio-pratico","title":"Exerc\u00edcio Pr\u00e1tico","text":"<ul> <li>Cria\u00e7\u00e3o de um arquivo <code>scanner.l</code> que reconhe\u00e7a:</li> <li>Identificadores</li> <li>N\u00fameros inteiros</li> <li>Espa\u00e7os em branco</li> </ul>"},{"location":"documento-aula/documento-aula2/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Testar incrementos pequenos de cada regra</li> <li>Implementar tratamento de erro (caracteres inv\u00e1lidos)</li> </ul>"},{"location":"documento-aula/documento-aula2/#tarefa","title":"Tarefa","text":"<ol> <li>Configurar e compilar um analisador l\u00e9xico b\u00e1sico usando flex (ou outra ferramenta dispon\u00edvel)</li> <li>Validar se identificadores, n\u00fameros e operadores simples s\u00e3o reconhecidos corretamente</li> </ol>"},{"location":"documento-aula/documento-aula2/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 28/04/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 2 J\u00falio Cesar Felipe das Neves"},{"location":"documento-aula/documento-aula3/","title":"Semana 3 - Pr\u00e1tica: Projeto Inicial do Compilador (Fase L\u00e9xica)","text":""},{"location":"documento-aula/documento-aula3/#objetivo","title":"Objetivo","text":"<p>Iniciar o desenvolvimento efetivo do compilador/interpretador, concentrando-se na etapa de an\u00e1lise l\u00e9xica.</p>"},{"location":"documento-aula/documento-aula3/#objetivos-da-aula","title":"Objetivos da Aula","text":"<ul> <li>Retomar a ideia de cada equipe sobre o compilador/interpretador escolhido</li> <li>Implementar a fase l\u00e9xica (analisador l\u00e9xico) com base em tokens principais</li> <li>Entregar um prot\u00f3tipo funcional e documentado, que servir\u00e1 para o P1</li> </ul>"},{"location":"documento-aula/documento-aula3/#importancia-da-fase-lexica","title":"Import\u00e2ncia da Fase L\u00e9xica","text":"<ul> <li>Transforma cadeias de caracteres em tokens (ex.: <code>IDENT</code>, <code>NUM</code>, <code>OP</code>)</li> <li>Fornece a base para a an\u00e1lise sint\u00e1tica</li> <li>Requisito m\u00ednimo para demonstrar progresso no P1 (30/04)</li> </ul>"},{"location":"documento-aula/documento-aula3/#tarefas-de-hoje","title":"Tarefas de Hoje","text":"<ol> <li>Definir tokens do projeto: identificadores, n\u00fameros, palavras-chave, s\u00edmbolos</li> <li>Criar arquivo l\u00e9xico (exemplo em Flex)</li> <li>Testar o scanner usando entradas curtas (verifica\u00e7\u00e3o r\u00e1pida dos tokens)</li> <li>Documentar: atualizar reposit\u00f3rio (c\u00f3digo, README, anota\u00e7\u00f5es)</li> </ol>"},{"location":"documento-aula/documento-aula3/#exemplo-de-ponto-de-partida-flex","title":"Exemplo de Ponto de Partida (Flex)","text":"<ul> <li>Dispon\u00edvel via GitHub (semana 03/scanner.l)</li> </ul>"},{"location":"documento-aula/documento-aula3/#tarefa-parte-1-de-2","title":"Tarefa (Parte 1 de 2)","text":"<ul> <li>Personalizar: adicionar ou remover tokens conforme a linguagem de cada equipe</li> <li>Inserir tratamento para coment\u00e1rios:</li> <li><code>//</code> at\u00e9 o fim da linha</li> <li><code>/* bloco */</code></li> <li>Gerar o scanner: <code>bash   flex scanner.l   gcc -o scanner lex.yy.c   ./scanner</code></li> </ul>"},{"location":"documento-aula/documento-aula3/#tarefa-parte-2-de-2","title":"Tarefa (Parte 2 de 2)","text":"<ul> <li>Testar usando um arquivo de exemplo, ex.:</li> </ul> <p><code>text   if x1 == 10   {       while _flag           x1 = x1 + 2   }</code></p> <ul> <li>Observar tokens gerados e avaliar se precisam de ajustes</li> <li>Publicar commits no reposit\u00f3rio (GitHub) e atualizar README:</li> <li>Como rodar o scanner</li> <li>Lista de tokens implementados</li> <li>Planejamento para a pr\u00f3xima fase</li> </ul>"},{"location":"documento-aula/documento-aula3/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 28/04/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 3 J\u00falio Cesar Felipe das Neves"},{"location":"documento-aula/documento-aula4/","title":"Semana 4 - Pr\u00e1tica: Implementa\u00e7\u00e3o Inicial do Parser","text":""},{"location":"documento-aula/documento-aula4/#conexao-com-o-cronograma-e-as-sprints","title":"Conex\u00e3o com o Cronograma e as Sprints","text":"<ul> <li>Cronograma: foco em an\u00e1lise sint\u00e1tica (plano de ensino)</li> <li>Projeto do compilador:</li> <li>Sprint anterior: fase l\u00e9xica conclu\u00edda ou avan\u00e7ada</li> <li>Agora: fase sint\u00e1tica com Bison, aproveitando os tokens gerados</li> </ul> <p>Objetivo: cada equipe deve produzir um parser inicial que reconhe\u00e7a constru\u00e7\u00f5es b\u00e1sicas da linguagem escolhida.</p>"},{"location":"documento-aula/documento-aula4/#passo-a-passo-exemplo-em-flex-bison","title":"Passo a Passo (Exemplo em Flex + Bison)","text":""},{"location":"documento-aula/documento-aula4/#definir-tokens-no-arquivo-y","title":"Definir Tokens no Arquivo <code>.y</code>","text":"<pre><code>%token NUM\n%token PLUS MINUS TIMES DIVIDE\n%token LPAREN RPAREN\n\n%union {\n    int intValue;\n}\n\n%type &lt;intValue&gt; NUM\n</code></pre> <ul> <li>Defini\u00e7\u00e3o do conjunto de tokens que ser\u00e3o usados no parser, coerentes com o scanner <code>.l</code></li> </ul>"},{"location":"documento-aula/documento-aula4/#arquivo-sintatico-parsery-parte-2","title":"Arquivo Sint\u00e1tico (<code>parser.y</code>) - Parte 2","text":"<pre><code>%{\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint yylex(void);\nvoid yyerror(const char *s);\n%}\n\n%union {\n    int intValue;\n}\n\n%token &lt;intValue&gt; NUM\n%type &lt;intValue&gt; expr\n%token PLUS MINUS TIMES DIVIDE LPAREN RPAREN\n\n%%\n\nexpr:\n      expr PLUS expr    { $$ = $1 + $3; }\n    | expr MINUS expr   { $$ = $1 - $3; }\n    | expr TIMES expr   { $$ = $1 * $3; }\n    | expr DIVIDE expr  { $$ = $1 / $3; }\n    | LPAREN expr RPAREN{ $$ = $2; }\n    | NUM               { $$ = $1; }\n    ;\n\n%%\n\nint main(void) { return yyparse(); }\nvoid yyerror(const char *s) { fprintf(stderr, \"Erro sint\u00e1tico: %s\\n\", s); }\n</code></pre>"},{"location":"documento-aula/documento-aula4/#arquivo-lexico-scannerl-parte-3","title":"Arquivo L\u00e9xico (<code>scanner.l</code>) - Parte 3","text":"<pre><code>%{\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"parser.tab.h\"\n%}\n\n%%\n\n[0-9]+  { yylval.intValue = atoi(yytext); return NUM; }\n\"+\"     { return PLUS; }\n\"-\"     { return MINUS; }\n\"*\"     { return TIMES; }\n\"/\"     { return DIVIDE; }\n\"(\"     { return LPAREN; }\n\")\"     { return RPAREN; }\n[ \\t\\n]+ { /* ignorar espa\u00e7os */ }\n.       { printf(\"Caractere n\u00e3o reconhecido: %s\\n\", yytext); }\n\n%%\n\nint yywrap(void) { return 1; }\n</code></pre>"},{"location":"documento-aula/documento-aula4/#compilacao-e-execucao-parte-4","title":"Compila\u00e7\u00e3o e Execu\u00e7\u00e3o - Parte 4","text":"<pre><code># Gerar arquivos Bison\nbison -d parser.y\n\n# Gerar arquivo Flex\nflex scanner.l\n\n# Compilar tudo\ngcc -o parser parser.tab.c lex.yy.c -lfl\n\n# Executar\n./parser\n</code></pre> <ul> <li>Digite uma express\u00e3o, como <code>3+4*2</code></li> <li>Se estiver correto, n\u00e3o aparece erro; caso contr\u00e1rio, verifique mensagens</li> </ul>"},{"location":"documento-aula/documento-aula4/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 28/04/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 4 J\u00falio Cesar Felipe das Neves"},{"location":"documento-aula/documento-aula5/","title":"Semana 5 - Pr\u00e1tica: Continua\u00e7\u00e3o do Parser e Tratamento de Erros Sint\u00e1ticos","text":""},{"location":"documento-aula/documento-aula5/#objetivos-da-aula","title":"Objetivos da Aula","text":"<ol> <li>Revisar o estado atual do parser (Bison) ap\u00f3s a aula anterior.</li> <li>Introduzir m\u00e9todos de tratamento de erros sint\u00e1ticos (mensagens claras, recupera\u00e7\u00e3o).</li> <li>Demonstrar um exemplo de parser com tratamento de erros.</li> <li>Orientar a adapta\u00e7\u00e3o do exemplo para os projetos das equipes.</li> <li>Alinhar atividades com as sprints do projeto de compilador.</li> </ol>"},{"location":"documento-aula/documento-aula5/#conexao-com-as-sprints","title":"Conex\u00e3o com as Sprints","text":"<ul> <li>Sprint anterior: In\u00edcio da implementa\u00e7\u00e3o do parser b\u00e1sico.</li> <li>Sprint atual:</li> <li>Aperfei\u00e7oar o parser, incluindo tratamento de erros.</li> <li>Refor\u00e7ar testes de parsing.</li> <li>Incluir \"testes de erros sint\u00e1ticos\" e \"melhorias de mensageria\" no backlog.</li> </ul>"},{"location":"documento-aula/documento-aula5/#conceito-tratamento-de-erros-sintaticos","title":"Conceito: Tratamento de Erros Sint\u00e1ticos","text":"<ol> <li>Detec\u00e7\u00e3o de erro: Identificar tokens fora da ordem esperada.</li> <li>Recupera\u00e7\u00e3o de erro: Retomar an\u00e1lise usando estrat\u00e9gias como panic mode e phrase-level.</li> <li>Mensagem ao usu\u00e1rio: Indicar causa e poss\u00edvel posi\u00e7\u00e3o do erro (linha, token, etc.).</li> </ol>"},{"location":"documento-aula/documento-aula5/#exemplo-de-parser-com-tratamento-de-erro-bison","title":"Exemplo de Parser com Tratamento de Erro (Bison)","text":""},{"location":"documento-aula/documento-aula5/#arquivo-parsery","title":"Arquivo <code>parser.y</code>","text":"<pre><code>%{\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint yylex(void);\nvoid yyerror(const char *s);\n%}\n\n%union { int intValue; }\n\n%token &lt;intValue&gt; NUM\n%token PLUS MINUS TIMES DIVIDE LPAREN RPAREN SEMI\n%type &lt;intValue&gt; expr\n\n%left PLUS MINUS\n%left TIMES DIVIDE\n\n%start input\n\n%%\n\ninput:\n      /* vazio */\n    | input expr SEMICOLON      { printf(\"Resultado: %d\\n\", $2); }\n    | input error SEMICOLON     { \n          fprintf(stderr, \"[ERRO SINTATICO] Erro recuperado at\u00e9 ';'\\n\");\n          yyerrok;\n          yyclearin;\n      }\n    ;\n\nexpr:\n      expr PLUS expr    { $$ = $1 + $3; }\n    | expr MINUS expr   { $$ = $1 - $3; }\n    | expr TIMES expr   { $$ = $1 * $3; }\n    | expr DIVIDE expr  { $$ = ($3 == 0) ? (fprintf(stderr, \"[ERRO SEMANTICO] Divisao por zero!\\n\"), 0) : ($1 / $3); }\n    | LPAREN expr RPAREN{ $$ = $2; }\n    | NUM               { $$ = $1; }\n    ;\n\n%%\n</code></pre>"},{"location":"documento-aula/documento-aula5/#arquivo-lexico-scannerl-de-exemplo","title":"Arquivo L\u00e9xico (<code>scanner.l</code>) de Exemplo","text":"<pre><code>%{\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"parser.tab.h\"\n%}\n\n%%\n\n[0-9]+     { yylval.intValue = atoi(yytext); return NUM; }\n\"+\"        { return PLUS; }\n\"-\"        { return MINUS; }\n\"*\"        { return TIMES; }\n\"/\"        { return DIVIDE; }\n\"(\"        { return LPAREN; }\n\")\"        { return RPAREN; }\n\";\"        { return SEMICOLON; }\n[ \\t\\n]+   { /* ignorar */ }\n.          { printf(\"Caractere n\u00e3o reconhecido: %s\\n\", yytext); }\n\n%%\n\nint yywrap(void) { return 1; }\n</code></pre>"},{"location":"documento-aula/documento-aula5/#tarefa-para-a-aula-pratica","title":"Tarefa para a Aula Pr\u00e1tica","text":"<ol> <li>Baixar/clonar o exemplo base ou criar a partir dos slides.</li> <li>Compilar usando <code>make</code>.</li> <li>Testar:</li> <li>Express\u00f5es v\u00e1lidas: <code>3+4;</code></li> <li>Erros sint\u00e1ticos: <code>(3++2;</code>, <code>3+4))</code></li> <li>Adaptar o projeto:</li> <li>Substituir ou complementar regras gramaticais.</li> <li>Escolher abordagem de recupera\u00e7\u00e3o (panic mode, phrase-level).</li> <li>Documentar as mudan\u00e7as no reposit\u00f3rio.</li> <li>Planejar:</li> <li>Incluir \"tratamento de erros\" no backlog.</li> <li>Discutir mensagens mais claras sobre erros.</li> </ol>"},{"location":"documento-aula/documento-aula5/#alinhamento-com-a-disciplina","title":"Alinhamento com a Disciplina","text":"<ul> <li>Cronograma: Aula pr\u00e1tica 5, ap\u00f3s implementa\u00e7\u00e3o inicial do parser.</li> <li>Objetivo: Tornar o compilador mais robusto.</li> <li>Pr\u00f3ximos passos:</li> <li>Estrutura de dados para AST</li> <li>Tabela de s\u00edmbolos</li> <li>Prepara\u00e7\u00e3o para P1</li> </ul>"},{"location":"documento-aula/documento-aula5/#conclusoes-e-recomendacoes","title":"Conclus\u00f5es e Recomenda\u00e7\u00f5es","text":"<ol> <li>Tratamento de erros melhora a experi\u00eancia do usu\u00e1rio e facilita a depura\u00e7\u00e3o.</li> <li>Usar Bison: <code>error</code>, <code>yyerrok</code>, <code>yyclearin</code>.</li> <li>Documentar claramente:</li> <li>Quais erros podem ser tratados.</li> <li>Comportamento do parser ao encontrar erros.</li> <li>Avan\u00e7ar com a pr\u00e1tica em aula.</li> <li>Integrar com as sprints, mantendo backlog e commits atualizados.</li> </ol>"},{"location":"documento-aula/documento-aula5/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 28/04/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 5 J\u00falio Cesar Felipe das Neves"},{"location":"documento-aula/documento-aula6/","title":"N\u00e3o Disponibilizado","text":""},{"location":"documento-aula/documento-aula7/","title":"Semana 7 - Pr\u00e1tica: Integra\u00e7\u00e3o da An\u00e1lise Sem\u00e2ntica no Compilador","text":""},{"location":"documento-aula/documento-aula7/#objetivos-da-aula","title":"Objetivos da Aula","text":"<ol> <li>Integrar a an\u00e1lise sem\u00e2ntica ao compilador Flex+Bison.</li> <li>Implementar verifica\u00e7\u00f5es de:</li> <li>Declara\u00e7\u00e3o de vari\u00e1veis.</li> <li>Redeclara\u00e7\u00e3o de identificadores.</li> <li>Compatibilidade de tipos.</li> <li>Gerar e analisar a AST (\u00c1rvore Sint\u00e1tica Abstrata) anotada.</li> <li>Validar a implementa\u00e7\u00e3o por meio de testes automatizados.</li> <li>Adaptar o c\u00f3digo \u00e0 estrutura dos projetos individuais.</li> </ol>"},{"location":"documento-aula/documento-aula7/#conexao-com-as-sprints","title":"Conex\u00e3o com as Sprints","text":"<ul> <li>Sprint anterior: Finaliza\u00e7\u00e3o do parser com tratamento de erros sint\u00e1ticos.</li> <li>Sprint atual:</li> <li>Implementar e testar an\u00e1lise sem\u00e2ntica.</li> <li>Anotar a AST com informa\u00e7\u00f5es de tipo e escopo.</li> <li>Adicionar ao backlog: verifica\u00e7\u00e3o sem\u00e2ntica, anota\u00e7\u00f5es na \u00e1rvore, e testes com erros sem\u00e2nticos.</li> </ul>"},{"location":"documento-aula/documento-aula7/#conceito-analise-semantica","title":"Conceito: An\u00e1lise Sem\u00e2ntica","text":"<ol> <li>Verifica\u00e7\u00e3o de declara\u00e7\u00e3o: Identificar uso de vari\u00e1veis n\u00e3o declaradas.</li> <li>Redeclara\u00e7\u00e3o de identificadores: Impedir m\u00faltiplas declara\u00e7\u00f5es de uma mesma vari\u00e1vel no mesmo escopo.</li> <li>Verifica\u00e7\u00e3o de tipo: Comparar tipos entre operandos e express\u00f5es.</li> <li>AST anotada: Estrutura de \u00e1rvore com metadados sem\u00e2nticos (tipo, escopo, etc.).</li> </ol>"},{"location":"documento-aula/documento-aula7/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 01/06/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 7 J\u00falio Cesar"},{"location":"documento-aula/documento-aula8/","title":"Semana 8 - Pr\u00e1tica: Gera\u00e7\u00e3o de C\u00f3digo Intermedi\u00e1rio (TAC)","text":""},{"location":"documento-aula/documento-aula8/#objetivos-da-aula","title":"Objetivos da Aula","text":"<ol> <li>Desenvolver um prot\u00f3tipo funcional para gera\u00e7\u00e3o de TAC (Three-Address Code)</li> <li>Integrar a travessia da AST com a gera\u00e7\u00e3o de instru\u00e7\u00f5es intermedi\u00e1rias</li> <li>Compreender:</li> <li>O uso de vari\u00e1veis tempor\u00e1rias</li> <li>O formato linear do c\u00f3digo intermedi\u00e1rio</li> <li>Validar a gera\u00e7\u00e3o de TAC atrav\u00e9s de testes automatizados</li> </ol>"},{"location":"documento-aula/documento-aula8/#conexao-com-as-sprints","title":"Conex\u00e3o com as Sprints","text":"<ul> <li>Sprint anterior: Implementa\u00e7\u00e3o de an\u00e1lise sem\u00e2ntica e anota\u00e7\u00e3o da AST.</li> <li>Sprint atual:</li> <li>In\u00edcio da gera\u00e7\u00e3o de c\u00f3digo intermedi\u00e1rio (TAC).</li> <li>Adi\u00e7\u00e3o de estrutura de gera\u00e7\u00e3o e uso de tempor\u00e1rias.</li> <li>Planejamento da integra\u00e7\u00e3o com o interpretador ou pr\u00f3xima etapa do backend.</li> </ul>"},{"location":"documento-aula/documento-aula8/#conceito-codigo-intermediario-tac","title":"Conceito: C\u00f3digo Intermedi\u00e1rio (TAC)","text":"<ol> <li>Formato linear: Instru\u00e7\u00f5es com tr\u00eas endere\u00e7os (ex: <code>t1 = a + b</code>).</li> <li>Tempor\u00e1rias: Vari\u00e1veis geradas durante a an\u00e1lise (ex: <code>t1</code>, <code>t2</code>).</li> <li>Abstra\u00e7\u00e3o da m\u00e1quina: Independente da arquitetura alvo.</li> </ol>"},{"location":"documento-aula/documento-aula8/#prototipo-gerador-de-tac","title":"Prot\u00f3tipo: Gerador de TAC","text":""},{"location":"documento-aula/documento-aula8/#passos","title":"Passos","text":"<ol> <li> <p>Prepara\u00e7\u00e3o <code>bash    unzip tac_prototipo_com_tests.zip    cd tac_prototipo</code></p> </li> <li> <p>Compila\u00e7\u00e3o <code>bash    make clean &amp;&amp; make</code></p> </li> <li> <p>Testes <code>bash    ./run_tests.sh</code></p> </li> <li> <p>Verifica\u00e7\u00f5es</p> </li> <li>A correta gera\u00e7\u00e3o de TAC para express\u00f5es v\u00e1lidas</li> <li>A estrutura esperada das instru\u00e7\u00f5es intermedi\u00e1rias</li> </ol>"},{"location":"documento-aula/documento-aula8/#tarefa-para-a-aula-pratica","title":"Tarefa para a Aula Pr\u00e1tica","text":"<ol> <li>Estudar a implementa\u00e7\u00e3o da AST e da fun\u00e7\u00e3o <code>gerarTAC()</code>.</li> <li>Adicionar casos de teste no diret\u00f3rio <code>tests/</code> cobrindo:</li> <li>Express\u00f5es aritm\u00e9ticas simples e compostas</li> <li>Uso de vari\u00e1veis e tempor\u00e1rias</li> <li>Documentar:</li> <li>As fun\u00e7\u00f5es principais do gerador</li> <li>Estrat\u00e9gias de aloca\u00e7\u00e3o de tempor\u00e1rias</li> <li>Integrar o prot\u00f3tipo ao projeto do grupo.</li> <li>Planejar o pr\u00f3ximo passo do backend (interpretador ou gerador final).</li> </ol>"},{"location":"documento-aula/documento-aula8/#alinhamento-com-a-disciplina","title":"Alinhamento com a Disciplina","text":"<ul> <li>Cronograma: Aula pr\u00e1tica 8, ap\u00f3s conclus\u00e3o da an\u00e1lise sem\u00e2ntica.</li> <li>Objetivo: In\u00edcio da gera\u00e7\u00e3o de c\u00f3digo no compilador.</li> <li>Pr\u00f3ximos passos:</li> <li>Expans\u00e3o da gera\u00e7\u00e3o de TAC</li> <li>Implementa\u00e7\u00e3o de um interpretador para o c\u00f3digo intermedi\u00e1rio</li> <li>Otimiza\u00e7\u00f5es simples de TAC</li> </ul>"},{"location":"documento-aula/documento-aula8/#conclusoes-e-recomendacoes","title":"Conclus\u00f5es e Recomenda\u00e7\u00f5es","text":"<ol> <li>TAC \u00e9 a ponte entre a AST e o c\u00f3digo execut\u00e1vel.</li> <li>Geradores devem ser organizados e facilmente depur\u00e1veis.</li> <li>Mensagens e logs de gera\u00e7\u00e3o ajudam na valida\u00e7\u00e3o.</li> <li>A integra\u00e7\u00e3o ao projeto deve ser incremental.</li> <li>A documenta\u00e7\u00e3o clara facilita a colabora\u00e7\u00e3o em equipe.</li> </ol>"},{"location":"documento-aula/documento-aula8/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 01/06/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 8 J\u00falio Cesar"},{"location":"documento-aula/documento-aula9/","title":"Compiladores 1 - Semana 9: Pr\u00e1tica","text":""},{"location":"documento-aula/documento-aula9/#otimizacao-de-codigo-introducao","title":"Otimiza\u00e7\u00e3o de C\u00f3digo - Introdu\u00e7\u00e3o","text":""},{"location":"documento-aula/documento-aula9/#objetivos-da-aula-pratica","title":"Objetivos da Aula Pr\u00e1tica","text":"<ul> <li>Implementar t\u00e9cnicas b\u00e1sicas de otimiza\u00e7\u00e3ao de c\u00f3digo</li> <li>Integrar o prot\u00f3tipo Flex+Bison ao fluxo de constru\u00e7\u00e3o</li> <li>Automatizar a verifica\u00e7\u00e3o atrav\u00e9s de testes em <code>tests/*.in</code></li> <li>Analisar o impacto das otimiza\u00e7\u00f5es no c\u00f3digo gerado</li> </ul>"},{"location":"documento-aula/documento-aula9/#configuracao-do-projeto","title":"Configura\u00e7\u00e3o do Projeto","text":"<p>Estrutura do Makefile:</p> <pre><code># Vari\u00e1veis essenciais\nCC = gcc\nFLEX = flex\nBISON = bison\nCFLAGS = -Wall -O2\nLDFLAGS = -lfl\n\n# Arquivos fonte\nSRC = main.c\nLEX = scanner.l\nYACC = parser.y\nTARGET = optimize\nTESTS = tests/*.in\n</code></pre> <p>Comandos principais:</p> <pre><code>make       # Compila o otimizador (gera execut\u00e1vel 'optimize')\nmake test  # Executa todos os testes automatizados\nmake clean # Limpa arquivos gerados\n</code></pre>"},{"location":"documento-aula/documento-aula9/#fluxo-de-trabalho","title":"Fluxo de Trabalho","text":"<p>Compila\u00e7\u00e3o:</p> <pre><code>make\n</code></pre> <p>Execu\u00e7\u00e3o de Testes:</p> <pre><code>make test\n</code></pre> <p>Exibe para cada teste em <code>tests/</code>:</p> <ul> <li>Nome do caso de teste</li> <li>Entrada fornecida</li> <li>Sa\u00edda do otimizador</li> </ul> <p>Adi\u00e7\u00e3o de Novos Testes:</p> <ul> <li>Criar arquivos <code>.in</code> no diret\u00f3rio <code>tests/</code></li> <li>Padr\u00e3o: <code>testeXX.in</code> (onde XX \u00e9 n\u00famero sequencial)</li> </ul>"},{"location":"documento-aula/documento-aula9/#tarefas-praticas","title":"Tarefas Pr\u00e1ticas","text":"<p>An\u00e1lise de Resultados:</p> <ul> <li>Executar <code>make test</code> e examinar as sa\u00eddas</li> <li>Verificar a corre\u00e7\u00e3o das otimiza\u00e7\u00f5es aplicadas</li> </ul> <p>Expans\u00e3o do Projeto:</p> <ul> <li>Implementar novas t\u00e9cnicas de otimiza\u00e7\u00e3o</li> <li>Adicionar casos de teste representativos</li> </ul> <p>Gerenciamento de C\u00f3digo:</p> <pre><code>git add .\ngit commit -m \"Implementa otimiza\u00e7\u00f5es b\u00e1sicas\"\ngit push origin main\n</code></pre> <p>Desenvolvimento Cont\u00ednuo:</p> <ul> <li>Avan\u00e7ar na implementa\u00e7\u00e3o do trabalho em equipe</li> <li>Documentar as otimiza\u00e7\u00f5es implementadas</li> </ul>"},{"location":"documento-aula/documento-aula9/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 01/06/2025 Cria\u00e7\u00e3o da atividade de desenvolvimento 9 J\u00falio Cesar"},{"location":"documento-planejamento/cronograma-executado/","title":"Cronograma Executado","text":"<p>O cronograma Executado \u00e9 o artefato utilizado para monitorar o real andamento das atividades que foram feitas longo do desenvolvimento do projeto. Neste projeto, optamos por organizar o planejamento por Etapas, utilizando pr\u00e1ticas \u00e1geis inspiradas no framework Scrum.</p> <p>Cada Etapa possui a dura\u00e7\u00e3o aproximada de duas semanas e foi estruturada com base em entregas concretas, responsabilidades divididas e foco em se\u00e7\u00f5es espec\u00edficas do projeto. Essa abordagem garante entregas cont\u00ednuas, visibilidade do progresso e flexibilidade para ajustes.</p> <p>O cronograma Executado ser\u00e1 atualizado ao fim de cada etapa.</p>"},{"location":"documento-planejamento/cronograma-executado/#ponto-de-controle-1-planejamento-e-implementacao-inicial-do-lexer-e-do-parser","title":"Ponto de Controle 1 \u2013 Planejamento e implementa\u00e7\u00e3o inicial do lexer e do parser","text":"<ul> <li>Per\u00edodo: 26/03 a 28/04</li> <li>Entrega: 28/04</li> <li>Apresenta\u00e7\u00e3o: 30/04</li> </ul>"},{"location":"documento-planejamento/cronograma-executado/#duplas-responsaveis-pelas-atas","title":"Duplas respons\u00e1veis pelas atas","text":"<ul> <li>Semana 1 (26/03 a 01/04): Kaleb</li> <li>Semana 2 (02/04 a 08/04): Kaleb</li> <li>Semana 3 (09/04 a 15/04): Kaleb</li> <li>Semana 4 (16/04 a 22/04): Kaleb</li> <li>Semana 5 (23/04 a 28/04): Kaleb</li> </ul>"},{"location":"documento-planejamento/cronograma-executado/#tarefas","title":"Tarefas","text":"<p><p>Tabela 1: Atividades executadas para a P1.</p></p> Tarefa Respons\u00e1veis Revisor(es) In\u00edcio Fim Escolha de linguagens e de compilador Todos Todos 26/03 02/04 Elabora\u00e7\u00e3o do cronograma planejado Breno Felipe 27/04 28/04 Implementa\u00e7\u00e3o do lexer usando o flex e bison Felipe e Lucas J\u00falio e Othavio 09/04 16/04 Implementa\u00e7\u00e3o do parser usando o flex e bison Felipe e Lucas J\u00falio e Othavio 16/04 16/04 Implementa\u00e7\u00e3o do lexer e parser utilizando o ply com todos os simbolos e palavras reservadas do C Felipe e Lucas J\u00falio e Othavio 26/04 26/04 Implementa\u00e7\u00e3o do if no interpretador usando o play J\u00falio e Othavio Felipe e Lucas 27/04 27/04 Revis\u00e3o final Todos Todos 28/04 28/04 <p><p>Fonte: Autores.</p></p>"},{"location":"documento-planejamento/cronograma-executado/#ponto-de-controle-2-prototipo-de-projeto-e-otimizacoes","title":"Ponto de Controle 2 \u2013 Prot\u00f3tipo de Projeto e Otimiza\u00e7\u00f5es","text":"<ul> <li>Per\u00edodo: 07/05 a 02/06</li> <li>Entrega: 02/06</li> <li>Apresenta\u00e7\u00e3o: 04/06</li> </ul>"},{"location":"documento-planejamento/cronograma-executado/#duplas-responsaveis-pelas-atas_1","title":"Duplas respons\u00e1veis pelas atas","text":"<ul> <li>Semana 1 (07/05 a 13/05): Felipe</li> <li>Semana 2 (14/05 a 20/05): Kaleb</li> <li>Semana 3 (21/05 a 27/05): Kaleb</li> <li>Semana 4 (28/05 a 02/06): Kaleb</li> </ul> <p><p>Tabela 2: Atividades executadas para a P2.</p></p> Tarefa Respons\u00e1veis Revisor(es) In\u00edcio Fim Integra\u00e7\u00e3o de an\u00e1lise sem\u00e2ntica Kaleb e Breno J\u00falio e Lucas 07/05 13/05 Aplica\u00e7\u00e3o de Prot\u00f3tipo de Gera\u00e7\u00e3o de C\u00f3digo Intermedi\u00e1rio Felipe e Lucas Othavio e Breno 14/05 20/05 Aplica\u00e7\u00e3o de Otimiza\u00e7\u00f5es Othavio e J\u00falio Felipe e Kaleb 21/05 27/05 Aplica\u00e7\u00e3o de Gera\u00e7\u00e3o de C\u00f3digo Final Felipe e Kaleb Breno e J\u00falio 28/05 02/06 Revis\u00e3o final Todos Todos 02/06 02/06 <p><p>Fonte: Autores.</p></p>"},{"location":"documento-planejamento/cronograma-executado/#referencia-bibliografica","title":"Refer\u00eancia Bibliogr\u00e1fica","text":"<p>SALES, Andr\u00e9 Barros de. Ambienta\u00e7\u00e3o - Aula 1, Exemplo de Cronograma. Aprender 3. Distrito Federal, 2025. Dispon\u00edvel em: https://aprender3.unb.br/mod/resource/view.php?id=1390833. Acesso em: 15 abr. 2025.</p> <p>ABNT NBR 6022:2018 \u2014 Informa\u00e7\u00e3o e documenta\u00e7\u00e3o \u2013 Artigo em publica\u00e7\u00e3o peri\u00f3dica cient\u00edfica impressa \u2013 Apresenta\u00e7\u00e3o.</p>"},{"location":"documento-planejamento/cronograma-executado/#-","title":"-","text":""},{"location":"documento-planejamento/cronograma-executado/#entrega-3-consolidacao-do-compilador","title":"Entrega 3 \u2013 Consolida\u00e7\u00e3o do Compilador","text":"<ul> <li>Per\u00edodo: 09/06 a 11/06</li> <li>Entrega Final: 11/06</li> </ul>"},{"location":"documento-planejamento/cronograma-executado/#duplas-responsaveis-pelas-atas_2","title":"Duplas respons\u00e1veis pelas atas","text":"<ul> <li>Semana 1 (09/06 a 11/06): J\u00falio e Kaleb</li> </ul> <p><p>Tabela 3: Atividades executadas para a entrega 3.</p></p> Tarefa Respons\u00e1veis Revisor(es) In\u00edcio Fim Consolida\u00e7\u00e3o do Compilador Felipe e Lucas Breno e Othavio 09/06 11/06 Implementa\u00e7\u00e3o de Testes Integrados Breno e Othavio Kaleb e Felipe 09/06 11/06 Revis\u00e3o final Todos Todos 11/06 11/06 <p><p>Fonte: Autores.</p></p>"},{"location":"documento-planejamento/cronograma-executado/#entrega-4-entrega-do-projeto-completo","title":"Entrega 4 \u2013 Entrega do Projeto Completo","text":"<ul> <li>Per\u00edodo: 18/06 a 27/06</li> <li>Entrega Final: 27/06</li> </ul>"},{"location":"documento-planejamento/cronograma-executado/#duplas-responsaveis-pelas-atas_3","title":"Duplas respons\u00e1veis pelas atas","text":"<ul> <li>Semana 1 (18/06 a 27/06): Felipe e Othavio</li> </ul> <p><p>Tabela 4: Atividades executadas para a entrega final.</p></p> Tarefa Respons\u00e1veis Revisor(es) In\u00edcio Fim Refinamento das mensagens de erro Breno e Lucas J\u00falio e Kaleb 18/06 25/06 Consolida\u00e7\u00e3o final do Compilador Todos Todos 25/06 27/06 Consolida\u00e7\u00e3o final do MkDocs Todos Todos 27/06 27/06 Revis\u00e3o final Todos Todos 27/06 27/06 <p><p>Fonte: Autores.</p></p>"},{"location":"documento-planejamento/cronograma-executado/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 11/04/2025 Desenvolvimento do Artefato Felipe das Neves Breno Alexandre 1.1 27/04/2025 Adi\u00e7\u00e3o da execu\u00e7\u00e3o da P1 Breno Alexandre Felipe das Neves 1.2 27/04/2025 Adi\u00e7\u00e3o da execu\u00e7\u00e3o da P2, E2 e E3 Breno Alexandre"},{"location":"documento-planejamento/cronograma-planejado/","title":"Cronograma Planejado","text":"<p>O cronograma planejado \u00e9 o artefato utilizado para distribuir e controlar o andamento das atividades ao longo do desenvolvimento do projeto. Neste projeto, optamos por organizar o planejamento por Etapas, utilizando pr\u00e1ticas \u00e1geis inspiradas no framework Scrum.</p> <p>Cada Etapa possui a dura\u00e7\u00e3o aproximada de duas semanas e foi estruturada com base em entregas concretas, responsabilidades divididas e foco em se\u00e7\u00f5es espec\u00edficas do projeto. Essa abordagem garante entregas cont\u00ednuas, visibilidade do progresso e flexibilidade para ajustes.</p>"},{"location":"documento-planejamento/cronograma-planejado/#ponto-de-controle-1-planejamento-e-implementacao-inicial-do-lexer-e-do-parser","title":"Ponto de Controle 1 \u2013 Planejamento e implementa\u00e7\u00e3o inicial do lexer e do parser","text":"<ul> <li>Per\u00edodo: 26/03 a 28/04</li> <li>Entrega: 28/04</li> <li>Apresenta\u00e7\u00e3o: 30/04</li> </ul>"},{"location":"documento-planejamento/cronograma-planejado/#duplas-responsaveis-pelas-atas","title":"Duplas respons\u00e1veis pelas atas","text":"<ul> <li>Semana 1 (26/03 a 01/04): Felipe</li> <li>Semana 2 (02/04 a 08/04): Othavio</li> <li>Semana 3 (09/04 a 15/04): Breno</li> <li>Semana 4 (16/04 a 22/04): Lucas</li> <li>Semana 5 (23/04 a 28/04): J\u00falio e Kaleb</li> </ul>"},{"location":"documento-planejamento/cronograma-planejado/#tarefas","title":"Tarefas","text":"<p><p>Tabela 1: Atividades planejadas para a P1.</p></p> Tarefa Respons\u00e1veis Revisor(es) In\u00edcio Fim Escolha de linguagens e de compilador Todos Todos 26/03 01/04 Elabora\u00e7\u00e3o do cronograma planejado Breno Felipe 26/03 01/04 Implementa\u00e7\u00e3o do lexer Othavio e Lucas J\u00falio e Felipe 09/04 15/04 Implementa\u00e7\u00e3o do parser Felipe e Kaleb Breno e J\u00falio 16/04 27/04 Revis\u00e3o final Todos Todos 28/04 28/04 <p><p>Fonte: Autores.</p></p>"},{"location":"documento-planejamento/cronograma-planejado/#ponto-de-controle-2-prototipo-de-projeto-e-otimizacoes","title":"Ponto de Controle 2 \u2013 Prot\u00f3tipo de Projeto e Otimiza\u00e7\u00f5es","text":"<ul> <li>Per\u00edodo: 07/05 a 02/06</li> <li>Entrega: 02/06</li> <li>Apresenta\u00e7\u00e3o: 04/06</li> </ul>"},{"location":"documento-planejamento/cronograma-planejado/#duplas-responsaveis-pelas-atas_1","title":"Duplas respons\u00e1veis pelas atas","text":"<ul> <li>Semana 1 (07/05 a 13/05): Lucas</li> <li>Semana 2 (14/05 a 20/05): J\u00falio</li> <li>Semana 3 (21/05 a 27/05): Kaleb e Felipe</li> <li>Semana 4 (28/05 a 02/06): Breno e Othavio</li> </ul> <p><p>Tabela 2: Atividades planejadas para a P2.</p></p> Tarefa Respons\u00e1veis Revisor(es) In\u00edcio Fim Integra\u00e7\u00e3o de an\u00e1lise sem\u00e2ntica Kaleb e Breno J\u00falio e Lucas 07/05 13/05 Aplica\u00e7\u00e3o de Prot\u00f3tipo de Gera\u00e7\u00e3o de C\u00f3digo Intermedi\u00e1rio Felipe e Lucas Othavio e Breno 14/05 20/05 Aplica\u00e7\u00e3o de Otimiza\u00e7\u00f5es Othavio e J\u00falio Felipe e Kaleb 21/05 27/05 Aplica\u00e7\u00e3o de Gera\u00e7\u00e3o de C\u00f3digo Final Felipe e Kaleb Breno e J\u00falio 28/05 02/06 Revis\u00e3o final Todos Todos 02/06 02/06 <p><p>Fonte: Autores.</p></p>"},{"location":"documento-planejamento/cronograma-planejado/#entrega-3-consolidacao-do-compilador","title":"Entrega 3 \u2013 Consolida\u00e7\u00e3o do Compilador","text":"<ul> <li>Per\u00edodo: 09/06 a 11/06</li> <li>Entrega Final: 11/06</li> </ul>"},{"location":"documento-planejamento/cronograma-planejado/#duplas-responsaveis-pelas-atas_2","title":"Duplas respons\u00e1veis pelas atas","text":"<ul> <li>Semana 1 (09/06 a 11/06): J\u00falio e Kaleb</li> </ul> <p><p>Tabela 3: Atividades planejadas para a entrega 3.</p></p> Tarefa Respons\u00e1veis Revisor(es) In\u00edcio Fim Consolida\u00e7\u00e3o do Compilador Felipe e Lucas Breno e Othavio 09/06 11/06 Implementa\u00e7\u00e3o de Testes Integrados Breno e Othavio Kaleb e Felipe 09/06 11/06 Revis\u00e3o final Todos Todos 11/06 11/06 <p><p>Fonte: Autores.</p></p>"},{"location":"documento-planejamento/cronograma-planejado/#entrega-4-entrega-do-projeto-completo","title":"Entrega 4 \u2013 Entrega do Projeto Completo","text":"<ul> <li>Per\u00edodo: 18/06 a 27/06</li> <li>Entrega Final: 27/06</li> </ul>"},{"location":"documento-planejamento/cronograma-planejado/#duplas-responsaveis-pelas-atas_3","title":"Duplas respons\u00e1veis pelas atas","text":"<ul> <li>Semana 1 (18/06 a 27/06): Felipe e Othavio</li> </ul> <p><p>Tabela 4: Atividades planejadas para a entrega final.</p></p> Tarefa Respons\u00e1veis Revisor(es) In\u00edcio Fim Refinamento das mensagens de erro Breno e Lucas J\u00falio e Kaleb 18/06 25/06 Consolida\u00e7\u00e3o final do Compilador Todos Todos 25/06 27/06 Consolida\u00e7\u00e3o final do MkDocs Todos Todos 27/06 27/06 Revis\u00e3o final Todos Todos 27/06 27/06 <p><p>Fonte: Autores.</p></p>"},{"location":"documento-planejamento/cronograma-planejado/#bibliografia","title":"Bibliografia","text":"<p>SALES, Andr\u00e9 Barros de. Ambienta\u00e7\u00e3o - Aula 1, Exemplo de Cronograma. Aprender 3. Distrito Federal, 2025. Dispon\u00edvel em: https://aprender3.unb.br/mod/resource/view.php?id=1390833. Acesso em: 15 abr. 2025.</p> <p>ABNT NBR 6022:2018 \u2014 Informa\u00e7\u00e3o e documenta\u00e7\u00e3o \u2013 Artigo em publica\u00e7\u00e3o peri\u00f3dica cient\u00edfica impressa \u2013 Apresenta\u00e7\u00e3o.</p>"},{"location":"documento-planejamento/cronograma-planejado/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 11/04/2025 Desenvolvimento do Artefato Felipe das Neves Breno Alexandre 1.1 27/04/2025 Adi\u00e7\u00e3o do planejamento geral Breno Alexandre Felipe das Neves"},{"location":"documento-planejamento/documento-planejamento/","title":"Documenta\u00e7\u00e3o Planejamento","text":""},{"location":"documento-planejamento/documento-planejamento/#planejamento","title":"\ud83d\udcca Planejamento","text":"<p>Nesta se\u00e7\u00e3o apresentamos o planejamento geral do projeto, incluindo visualiza\u00e7\u00e3o de engajamento da equipe, cronogramas e as ferramentas/metodologias adotadas.</p>"},{"location":"documento-planejamento/documento-planejamento/#heatmap","title":"\ud83d\udd25 HeatMap","text":"<p>O HeatMap \u00e9 um recurso visual que representa a intensidade de participa\u00e7\u00e3o de cada membro da equipe ao longo das semanas. Ele ajuda a identificar per\u00edodos de maior contribui\u00e7\u00e3o e engajamento, servindo como apoio para an\u00e1lises de desempenho e distribui\u00e7\u00e3o de tarefas.</p>"},{"location":"documento-planejamento/documento-planejamento/#cronograma-planejado","title":"\ud83d\uddd3\ufe0f Cronograma Planejado","text":"<p>Este cronograma foi elaborado no in\u00edcio do projeto com o intuito de organizar as atividades por etapas. Nele est\u00e3o definidos os principais marcos de cada sprint, promovendo uma vis\u00e3o clara do desenvolvimento previsto.</p>"},{"location":"documento-planejamento/documento-planejamento/#cronograma-executado","title":"\u2705 Cronograma Executado","text":"<p>O cronograma executado mostra como o projeto realmente evoluiu ao longo do tempo. Ele destaca as tarefas conclu\u00eddas e serve para compara\u00e7\u00e3o com o cronograma inicialmente planejado, evidenciando eventuais ajustes e melhorias no processo.</p>"},{"location":"documento-planejamento/documento-planejamento/#ferramentas","title":"\ud83d\udee0\ufe0f Ferramentas","text":"<p>Neste t\u00f3pico listamos as principais ferramentas utilizadas durante o desenvolvimento do projeto. Cada ferramenta foi escolhida com base em sua utilidade e contribui\u00e7\u00e3o para o fluxo de trabalho da equipe, como controle de vers\u00e3o, prototipagem, comunica\u00e7\u00e3o e organiza\u00e7\u00e3o.</p>"},{"location":"documento-planejamento/documento-planejamento/#metodologia-utilizada","title":"\ud83e\udded Metodologia Utilizada","text":"<p>A equipe utilizou a metodologia \u00e1gil Scrum, que permite organizar o trabalho em ciclos curtos chamados sprints. Essa abordagem foi escolhida por facilitar a adapta\u00e7\u00e3o \u00e0s mudan\u00e7as, melhorar a comunica\u00e7\u00e3o e garantir entregas incrementais de valor ao longo do tempo.</p>"},{"location":"documento-planejamento/documento-planejamento/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 11/04/2025 Cria\u00e7\u00e3o da se\u00e7\u00e3o de heatmap Felipe das Neves Lucas Soares"},{"location":"documento-planejamento/ferramentas-utilizadas/","title":"Ferramentas Utilizadas","text":"<p>Nesta se\u00e7\u00e3o, apresentamos as ferramentas utilizadas pela equipe na etapa de planejamento e organiza\u00e7\u00e3o do projeto Celular Seguro. As tecnologias foram escolhidas com base em acessibilidade, praticidade e funcionalidades que atendem \u00e0 natureza colaborativa do trabalho.</p> Tabela 1 \u2013 Ferramentas utilizadas pela equipe e suas finalidades Ferramenta Finalidade GitHub Controle de vers\u00e3o, organiza\u00e7\u00e3o e hospedagem do reposit\u00f3rio. \u00b9 Microsoft Teams Reuni\u00f5es s\u00edncronas, comunica\u00e7\u00e3o em grupo. \u00b2 Google Docs Produ\u00e7\u00e3o e edi\u00e7\u00e3o colaborativa de documentos. \u00b3 Google Drive Armazenamento e compartilhamento de arquivos. \u2075 Lucidchart Cria\u00e7\u00e3o de diagramas e Rich Pictures. \u2076 Paint Edi\u00e7\u00e3o b\u00e1sica de imagens e ilustra\u00e7\u00f5es r\u00e1pidas. \u2077 MkDocs Gera\u00e7\u00e3o e publica\u00e7\u00e3o de documenta\u00e7\u00e3o est\u00e1tica. \u2079 YouTube Hospedagem de v\u00eddeos e apresenta\u00e7\u00f5es do projeto. \u00b9\u2070 WhatsApp Comunica\u00e7\u00e3o r\u00e1pida entre os membros. \u00b9\u00b9 VS Code Editor de c\u00f3digo e Markdown utilizado para o desenvolvimento. \u00b9\u00b2 DeepSeek Assistente de IA utilizado para esclarecimento de d\u00favidas t\u00e9cnicas, aux\u00edlio na compreens\u00e3o e gera\u00e7\u00e3o de trechos de algoritmos, apoio na documenta\u00e7\u00e3o e execu\u00e7\u00e3o de trabalhos manuais.\u00b9\u00b3 <p>Fonte: Elaborado pelos autores, 2025.</p>"},{"location":"documento-planejamento/ferramentas-utilizadas/#referencia-bibliografica","title":"Refer\u00eancia Bibliogr\u00e1fica","text":"<p>\u00b9 GITHUB. GitHub. 2025. Dispon\u00edvel em: https://github.com/. Acesso em: 10 abr. 2025.</p> <p>\u00b2 MICROSOFT. Microsoft Teams. 2025. Dispon\u00edvel em: https://www.microsoft.com/pt-br/microsoft-teams/group-chat-software. Acesso em: 10 abr. 2025.</p> <p>\u00b3 GOOGLE. Google Docs. 2025. Dispon\u00edvel em: https://docs.google.com. Acesso em: 10 abr. 2025.</p> <p>\u2074 GOOGLE. Google Sheets. 2025. Dispon\u00edvel em: https://sheets.google.com. Acesso em: 10 abr. 2025.</p> <p>\u2075 GOOGLE. Google Drive. 2025. Dispon\u00edvel em: https://drive.google.com. Acesso em: 10 abr. 2025.</p> <p>\u2076 LUCID SOFTWARE. Lucidchart. 2025. Dispon\u00edvel em: https://www.lucidchart.com. Acesso em: 10 abr. 2025.</p> <p>\u2077 MICROSOFT. Paint. 2025. Dispon\u00edvel em: https://apps.microsoft.com/detail/ms-paint/9PCFS5B6T72H. Acesso em: 10 abr. 2025.</p> <p>\u2078 CHANGE VISION. Astah. 2025. Dispon\u00edvel em: https://astah.net/. Acesso em: 10 abr. 2025.</p> <p>\u2079 MKDOCS. MkDocs. 2025. Dispon\u00edvel em: https://www.mkdocs.org/. Acesso em: 10 abr. 2025.</p> <p>\u00b9\u2070 GOOGLE. YouTube. 2025. Dispon\u00edvel em: https://www.youtube.com. Acesso em: 10 abr. 2025.</p> <p>\u00b9\u00b9 META. WhatsApp. 2025. Dispon\u00edvel em: https://www.whatsapp.com/. Acesso em: 10 abr. 2025.</p> <p>\u00b9\u00b2 MICROSOFT. Visual Studio Code. 2025. Dispon\u00edvel em: https://code.visualstudio.com/. Acesso em: 10 abr. 2025.</p> <p>\u00b9\u00b3 DEEPSEEK. DeepSeek Chat. 2024. Dispon\u00edvel em: https://www.deepseek.com. Acesso em: 10 abr. 2025.</p>"},{"location":"documento-planejamento/ferramentas-utilizadas/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 11/04/2025 Cria\u00e7\u00e3o do t\u00f3pico de ferramentas utilizadas Felipe das Neves Lucas Soares 2.0 18/06/2025 Cria\u00e7\u00e3o do t\u00f3pico de ferramentas utilizadas refinado Othavio Bolzan Kaleb Macedo"},{"location":"documento-planejamento/heatmap/","title":"Heatmap de Disponibilidade","text":"<p>O heatmap de disponibilidade \u00e9 uma ferramenta visual essencial para equipes que buscam otimizar a coordena\u00e7\u00e3o e maximizar a produtividade. Ele permite identificar de forma r\u00e1pida e eficiente os hor\u00e1rios e dias em que os membros da equipe est\u00e3o dispon\u00edveis para colaborar. Em contextos de trabalho flex\u00edvel, especialmente em equipes remotas ou distribu\u00eddas, essa ferramenta se torna ainda mais relevante para facilitar a organiza\u00e7\u00e3o de tarefas, reuni\u00f5es e atividades colaborativas. Ao consolidar as informa\u00e7\u00f5es de disponibilidade dos integrantes, o heatmap oferece insights valiosos para uma melhor aloca\u00e7\u00e3o de tempo e recursos, promovendo decis\u00f5es mais \u00e1geis e eficazes.</p>"},{"location":"documento-planejamento/heatmap/#objetivo","title":"Objetivo","text":"<p>O objetivo principal do heatmap de disponibilidade \u00e9 maximizar a colabora\u00e7\u00e3o e a produtividade da equipe, proporcionando uma vis\u00e3o clara dos momentos em que todos os membros est\u00e3o dispon\u00edveis simultaneamente.</p>"},{"location":"documento-planejamento/heatmap/#heatmap","title":"Heatmap","text":"<p>A Figura 1 e a Tabela 1 a seguir representam a an\u00e1lise de disponibilidade do grupo. Os valores num\u00e9ricos variam de 0 a 6, indicando o n\u00famero de membros dispon\u00edveis em cada faixa hor\u00e1ria.</p> <p>Figura 1: Heatmap de disponibilidade da equipe</p> <p>Fonte: Elaborado pelos autores, 2025.</p> <p>Tabela 1: Mapeamento num\u00e9rico de disponibilidade por hor\u00e1rio</p> Hora Domingo Segunda Ter\u00e7a Quarta Quinta Sexta S\u00e1bado 08:00 - 09:002001002 09:00 - 10:003001002 10:00 - 11:003001002 11:00 - 12:002001002 12:00 - 13:001010112 13:00 - 14:001110113 14:00 - 15:003221234 15:00 - 16:003521234 16:00 - 17:004554145 17:00 - 18:004523132 18:00 - 19:002533332 19:00 - 20:002544332 20:00 - 21:003654342 21:00 - 22:003663542 22:00 - 23:002656443 23:00 - 00:003225110 <p>Fonte: Elaborado pelos autores, Felipe das Neves, 2025.</p>"},{"location":"documento-planejamento/heatmap/#bibliografia","title":"Bibliografia","text":"<p>GOOGLE. Heatmap de Disponibilidade da Equipe. Google Sheets, 2025. Acesso em: 11 abr. 2025.</p>"},{"location":"documento-planejamento/heatmap/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 11/04/2025 Cria\u00e7\u00e3o da se\u00e7\u00e3o de heatmap Felipe das Neves Lucas Soares"},{"location":"documento-planejamento/metodologias-utilizadas/","title":"Metodologia","text":"<p>A metodologia do projeto define como o processo foi conduzido, incluindo as pr\u00e1ticas e estrat\u00e9gias utilizadas para o planejamento e execu\u00e7\u00e3o das etapas. Para este projeto, a equipe optou por utilizar o m\u00e9todo \u00e1gil Scrum, devido \u00e0 familiaridade do grupo com seus princ\u00edpios e din\u00e2micas.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#scrum","title":"SCRUM","text":"<p>O Scrum \u00e9 um framework \u00e1gil que organiza o desenvolvimento de projetos em ciclos curtos e iterativos chamados de sprints. Cada sprint compreende um conjunto de tarefas espec\u00edficas que devem ser realizadas dentro de um per\u00edodo determinado. Esse modelo \u00e9 ideal para projetos com requisitos que evoluem com o tempo, como \u00e9 o caso deste trabalho.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#equipe-scrum","title":"Equipe Scrum","text":"<p>A tabela a seguir apresenta os pap\u00e9is definidos segundo o framework Scrum e os integrantes do projeto respons\u00e1veis por cada fun\u00e7\u00e3o.</p> <p>Tabela 1 \u2013 Composi\u00e7\u00e3o da Equipe Scrum</p> Fun\u00e7\u00e3o Respons\u00e1vel Descri\u00e7\u00e3o Scrum Master Felipe das Neves  Respons\u00e1vel por facilitar a aplica\u00e7\u00e3o das pr\u00e1ticas \u00e1geis, removendo impedimentos e garantindo o bom andamento do projeto. Product Owner Kaleb de Souza Representa os interesses dos stakeholders e garante que o produto entregue atenda \u00e0s suas necessidades. Time de Desenvolvimento Todos os membros Equipe encarregada de implementar as tarefas planejadas em cada sprint. <p>Fonte: Elaborado pelos autores, Felipe das Neves, 2025.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#eventos-do-scrum","title":"Eventos do Scrum","text":"<p>A tabela abaixo apresenta os eventos Scrum utilizados pela equipe e suas respectivas finalidades.</p> <p>Tabela 2 \u2013 Eventos Scrum utilizados no projeto</p> Evento Descri\u00e7\u00e3o Sprint Ciclo de desenvolvimento semanal que visa o cumprimento de tarefas planejadas na reuni\u00e3o de planning e revisadas na review. Status Reuni\u00f5es r\u00e1pidas entre sprints para alinhamento e verifica\u00e7\u00e3o de obst\u00e1culos. Realizadas \u00e0s quartas \u00e0s 22h. <p>Fonte: Elaborado pelos autores, Felipe as Neves, 2025.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#reunioes-da-equipe","title":"Reuni\u00f5es da Equipe","text":"<p>Abaixo, apresenta-se o cronograma de reuni\u00f5es definidas ap\u00f3s an\u00e1lise da disponibilidade dos membros.</p> <p>Tabela 3 \u2013 Cronograma de Reuni\u00f5es da Equipe</p> Tipo de Reuni\u00e3o Dia/Hor\u00e1rio Observa\u00e7\u00f5es Planning + Review Quarta-feira \u00e0s 14h Reuni\u00e3o principal para planejamento das tarefas e avalia\u00e7\u00e3o das entregas anteriores. Status Sexta-feira \u00e0s 16h Reuni\u00e3o curta, realizada de forma mais din\u00e2mica e objetiva. <p>Fonte: Elaborado pelos autores, Felipe as Neves, 2025.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#outras-praticas-utilizadas","title":"Outras Pr\u00e1ticas Utilizadas","text":"<p>Al\u00e9m dos eventos do Scrum, a equipe tamb\u00e9m adotou a pr\u00e1tica de programa\u00e7\u00e3o em duplas (pair programming), onde:</p> <ul> <li>Um membro atua como programador (codificando);</li> <li>O outro como revisor (analisando l\u00f3gica, erros e melhorias).</li> </ul> <p>Essa pr\u00e1tica contribui para: - Compartilhamento de conhecimento; - Detec\u00e7\u00e3o precoce de erros; - Aumento da qualidade do c\u00f3digo produzido.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#politica-de-contribuicao","title":"Pol\u00edtica de Contribui\u00e7\u00e3o","text":"<p>Este reposit\u00f3rio segue uma pol\u00edtica de versionamento e colabora\u00e7\u00e3o inspirada nas melhores pr\u00e1ticas de Engenharia de Software.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#branches","title":"Branches","text":"<p>A tabela abaixo apresenta o padr\u00e3o de nomenclatura para cria\u00e7\u00e3o de branches durante o desenvolvimento do projeto.</p> <p>Tabela 4 \u2013 Padr\u00e3o de nomenclatura para branches</p> Tipo Padr\u00e3o de nome Exemplo Funcionalidade <code>feature/nome-curto</code> <code>feature/caso-de-uso-login</code> Corre\u00e7\u00e3o <code>fix/descricao</code> <code>fix/erro-ortografia</code> Documento <code>doc/tipo-de-arquivo</code> <code>doc/especificacao-supp</code> Refatora\u00e7\u00e3o <code>refactor/parte</code> <code>refactor/casos-de-uso</code> <p>Fonte: Guia de Contribui\u00e7\u00e3o do Projeto; CONTRIBUTING.MD (Arquivo fonte), 2025.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#commits","title":"Commits","text":"<p>O padr\u00e3o de commits utilizado segue a estrutura <code>&lt;tipo&gt;: &lt;descri\u00e7\u00e3o breve&gt;</code>. Exemplos:</p> <ul> <li><code>doc: adicionar gloss\u00e1rio inicial</code></li> <li><code>feat: adicionar caso de uso para login</code></li> <li><code>fix: corrigir diagrama de atividades do cadastro</code></li> </ul>"},{"location":"documento-planejamento/metodologias-utilizadas/#issues","title":"Issues","text":"<p>As issues seguem o modelo de clareza, com t\u00edtulo e descri\u00e7\u00e3o objetivos. Exemplo:</p> <pre><code>## Tarefa\nAdicionar o caso de uso \"Recuperar Senha\" no documento de requisitos funcionais.\n\n## Checklist\n- [ ] Criar branch feature/caso-de-uso-recuperar-senha\n- [ ] Criar diagrama de caso de uso\n- [ ] Especificar fluxo principal e alternativo\n</code></pre>"},{"location":"documento-planejamento/metodologias-utilizadas/#pull-requests-prs","title":"Pull Requests (PRs)","text":"<p>Cada PR inclui:</p> <ul> <li> <p>T\u00edtulo descritivo e padronizado</p> </li> <li> <p>Checklist de revis\u00e3o</p> </li> <li> <p>Associa\u00e7\u00e3o a uma issue (quando aplic\u00e1vel)</p> </li> </ul>"},{"location":"documento-planejamento/metodologias-utilizadas/#bibliografia","title":"Bibliografia","text":"<p>ALVES, Isaque, ROCHA, Carla. Qualifying Software Engineers Undergraduates in DevOps - Challenges of introducing technical and non-technical conceptss in a project-oriented course. Arxiv. [S. l.], v.1, 2021. Dispon\u00edvel em: &lt;https://arxiv.org/abs/2102.06662. Acesso em: 10 abr. 2025.</p>"},{"location":"documento-planejamento/metodologias-utilizadas/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 11/04/2025 Cria\u00e7\u00e3o do t\u00f3pico metodolagias utilizadas Felipe das Neves Lucas Soares"},{"location":"documento-testes/testes/","title":"Testes","text":"<p>Este documento detalha a implementa\u00e7\u00e3o da su\u00edte de testes do projeto para garantir a corretude e a estabilidade do interpretador, al\u00e9m da documenta\u00e7\u00e3o t\u00e9cnica das funcionalidades implementadas.</p>"},{"location":"documento-testes/testes/#estrategia-de-testes","title":"Estrat\u00e9gia de Testes","text":"<p>Para validar o interpretador, adotamos uma abordagem de testes unit\u00e1rios e de integra\u00e7\u00e3o utilizando a biblioteca <code>pytest</code>. A estrat\u00e9gia foi dividida em duas categorias principais:</p> <ol> <li>Testes de Sucesso (Happy Path): Verificam se o interpretador executa corretamente c\u00f3digos C v\u00e1lidos e produz o resultado esperado.</li> <li>Testes de Erro (Sad Path): Asseguram que o interpretador identifica e lida adequadamente com erros, sejam eles sint\u00e1ticos (c\u00f3digo malformado) ou sem\u00e2nticos/runtime (erros durante a execu\u00e7\u00e3o).</li> </ol> <p>A estrutura de testes consiste em alimentar o interpretador com pequenos trechos de c\u00f3digo C e comparar o resultado (ou o erro gerado) com um valor esperado.</p>"},{"location":"documento-testes/testes/#1-testes-de-sucesso","title":"1. Testes de Sucesso","text":"<p>Estes testes cobrem todas as funcionalidades implementadas, como opera\u00e7\u00f5es aritm\u00e9ticas, estruturas de controle, manipula\u00e7\u00e3o de arrays, etc.</p> <ul> <li>Objetivo: Garantir que a l\u00f3gica do interpretador est\u00e1 correta para entradas v\u00e1lidas.</li> <li>Implementa\u00e7\u00e3o (Exemplo Hipot\u00e9tico): Criamos uma fun\u00e7\u00e3o de teste para cada cen\u00e1rio. A fun\u00e7\u00e3o define um c\u00f3digo C, o executa atrav\u00e9s do interpretador e usa a declara\u00e7\u00e3o <code>assert</code> do <code>pytest</code> para verificar se o valor de retorno \u00e9 o esperado.</li> </ul> <pre><code># test_interpreter.py (Exemplo)\nimport pytest\nfrom main import run_interpreter # Supondo uma fun\u00e7\u00e3o principal que executa o interpretador\n\ndef test_while_loop_sum():\n    \"\"\"\n    Testa um la\u00e7o 'while' que calcula a soma dos n\u00fameros de 1 a 5.\n    \"\"\"\n    code = \"\"\"\n        int i = 1;\n        int sum = 0;\n        while (i &lt; 6) {\n            sum = sum + i;\n            i = i + 1;\n        }\n        return sum;\n    \"\"\"\n    result = run_interpreter(code)\n    assert result == 15 # 1 + 2 + 3 + 4 + 5 = 15\n</code></pre>"},{"location":"documento-testes/testes/#2-testes-de-erro","title":"2. Testes de Erro","text":"<p>Esses s\u00e3o cruciais para a robustez do interpretador. Eles verificam se os erros s\u00e3o capturados nos momentos certos (parsing ou execu\u00e7\u00e3o) e se as mensagens de erro s\u00e3o informativas.</p> <ul> <li>Objetivo: Validar o tratamento de exce\u00e7\u00f5es e a detec\u00e7\u00e3o de erros.</li> <li>Implementa\u00e7\u00e3o (Exemplo Hipot\u00e9tico): Utilizamos o <code>pytest.raises</code> para afirmar que um determinado tipo de erro \u00e9 lan\u00e7ado ao tentar executar um c\u00f3digo C inv\u00e1lido.</li> </ul> <pre><code># test_interpreter.py (Exemplo)\ndef test_undeclared_variable_error():\n    \"\"\"\n    Testa se um NameError \u00e9 lan\u00e7ado ao tentar usar uma vari\u00e1vel n\u00e3o declarada.\n    \"\"\"\n    code = \"\"\"\n        int x = 5;\n        y = x + 2; // 'y' n\u00e3o foi declarada\n        return y;\n    \"\"\"\n    with pytest.raises(NameError, match=\"Variable 'y' not declared.\"):\n        run_interpreter(code)\n</code></pre>"},{"location":"documento-testes/testes/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 26/06/2025 Desenvolvimento do artefato para docuementa\u00e7\u00e3o Felipe das Neves Lucas Soares"},{"location":"entregas/entregas1/","title":"Interpretador de C em Python","text":"<p>Este projeto implementa um interpretador simplificado para um subconjunto da linguagem C, utilizando Python e a biblioteca PLY (Python Lex-Yacc).</p> <p>Nesse primeiro momento implementamos toda a tabela de simbolos e palavras reservadas do C, al\u00e9m de j\u00e1 implementar os condicionais if e else. Come\u00e7amo o while, contudo temos que refinar melhor esse la\u00e7o.</p>"},{"location":"entregas/entregas1/#visao-geral","title":"Vis\u00e3o Geral","text":"<ul> <li>Linguagem de entrada: Subconjunto de C (inteiros, <code>if</code>, <code>return</code>)</li> <li>Tecnologias: Python + PLY</li> <li>Etapas: An\u00e1lise l\u00e9xica \u2192 Sint\u00e1tica (AST) \u2192 Interpreta\u00e7\u00e3o</li> <li>Objetivo: Did\u00e1tico \u2014 compreender como funciona um compilador simples</li> </ul>"},{"location":"entregas/entregas1/#instalacao","title":"Instala\u00e7\u00e3o","text":""},{"location":"entregas/entregas1/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Python 3.8+</li> <li>PLY</li> </ul>"},{"location":"entregas/entregas1/#instale-as-dependencias","title":"Instale as depend\u00eancias","text":"<pre><code>pip install -r requirements.txt\n\n</code></pre>"},{"location":"entregas/entregas1/#para-executar-faca","title":"Para executar, fa\u00e7a:","text":"<pre><code>python main.py testes.c\n\n</code></pre>"},{"location":"entregas/entregas1/#arquitetura-do-projeto","title":"Arquitetura do Projeto","text":""},{"location":"entregas/entregas1/#componentes-principais","title":"Componentes Principais","text":"Arquivo Responsabilidade <code>lexer.py</code> \ud83e\uddea An\u00e1lise l\u00e9xica \u2014 define tokens da linguagem C <code>parser.py</code> \ud83e\udde0 An\u00e1lise sint\u00e1tica \u2014 constr\u00f3i a AST (\u00c1rvore Sint\u00e1tica Abstrata) <code>interpreter.py</code> \u2699\ufe0f Interpretador \u2014 executa a AST em tempo de execu\u00e7\u00e3o <code>main.py</code> \ud83d\udda5\ufe0f Orquestrador \u2014 coordena lexer, parser e interpreta\u00e7\u00e3o <code>testes.c</code> \ud83e\uddfe Arquivo de exemplo com c\u00f3digo C test\u00e1vel"},{"location":"entregas/entregas1/#fluxo-de-execucao","title":"Fluxo de Execu\u00e7\u00e3o","text":"<pre><code>flowchart TD\n    A[\ud83d\udcc4 C\u00f3digo-fonte (.c)] --&gt; B[\ud83d\udd0d Lexer&lt;br/&gt;(Tokeniza\u00e7\u00e3o)]\n    B --&gt; C[\ud83e\udde9 Parser&lt;br/&gt;(Gera\u00e7\u00e3o de AST)]\n    C --&gt; D[\ud83e\uddee Interpretador&lt;br/&gt;(Execu\u00e7\u00e3o da AST)]\n    D --&gt; E[\ud83d\udce4 Resultado Final]\n</code></pre>"},{"location":"entregas/entregas1/#exemplo-completo","title":"Exemplo Completo","text":"<p>No arquivo de testes.c</p> <pre><code>int main() {\n    int x = 4;\n    int y = 3;\n\n    if ((2+6) &gt; (x+y)) {\n        return 1;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"entregas/entregas1/#espera-se-a-saida","title":"Espera-se a sa\u00edda:","text":"<pre><code>Tokens:\n  INT: int\n  ID: main\n  ...\n  RETURN: return\n  NUMBER: 0\n\nAbstract Syntax Tree:\n\u2514\u2500 Program\n  \u2514\u2500 Function: main (int)\n    \u2514\u2500 Body\n      \u2514\u2500 Declare: x (int)\n        \u2514\u2500 Value\n          \u2514\u2500 Num: 4\n      \u2514\u2500 Declare: y (int)\n        \u2514\u2500 Value\n          \u2514\u2500 Num: 3\n      \u2514\u2500 If\n        \u2514\u2500 Condition\n          \u2514\u2500 Op: &gt;\n            \u2514\u2500 Left\n              \u2514\u2500 Op: +\n                \u2514\u2500 Num: 2\n                \u2514\u2500 Num: 6\n            \u2514\u2500 Right\n              \u2514\u2500 Op: +\n                \u2514\u2500 Var: x\n                \u2514\u2500 Var: y\n        \u2514\u2500 Body\n          \u2514\u2500 Return\n            \u2514\u2500 Num: 1\n      \u2514\u2500 Return\n        \u2514\u2500 Num: 0\n\nResultado: 0\nVari\u00e1veis finais: {'x': 4, 'y': 3}\n\n</code></pre>"},{"location":"entregas/entregas1/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 30/04/2025 Desenvolvimento do t\u00f3pico da entrega 1 Felipe das Neves Lucas Soares"},{"location":"entregas/entregas2/","title":"Interpretador de C em Python","text":"<p>Nesta Etapa focamos na resolu\u00e7\u00e3o dos problemas da entrega 1.</p>"},{"location":"entregas/entregas2/#visao-geral","title":"Vis\u00e3o Geral","text":"<ul> <li>Linguagem de entrada: Subconjunto de C (inteiros, <code>if</code>, <code>else</code>, <code>while</code>, <code>for</code>, <code>return</code>)</li> <li>Tecnologias: Python + PLY</li> </ul>"},{"location":"entregas/entregas2/#instalacao","title":"Instala\u00e7\u00e3o","text":""},{"location":"entregas/entregas2/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Python 3.8+</li> <li>PLY</li> </ul>"},{"location":"entregas/entregas2/#instale-as-dependencias","title":"Instale as depend\u00eancias","text":"<pre><code>pip install -r requirements.txt\n\n</code></pre>"},{"location":"entregas/entregas2/#para-executar-faca","title":"Para executar, fa\u00e7a:","text":"<pre><code>python main.py testes.c\n\n</code></pre> <p>Obs.: vc pode colocar o c\u00f3digo utilizado para teste da equipe, localizado na pasta Testes dentro de interpretadorPython.</p>"},{"location":"entregas/entregas2/#arquitetura-do-projeto","title":"Arquitetura do Projeto","text":""},{"location":"entregas/entregas2/#componentes-principais","title":"Componentes Principais","text":"Arquivo Responsabilidade <code>lexer.py</code> \ud83e\uddea An\u00e1lise l\u00e9xica \u2014 define tokens da linguagem C <code>parser.py</code> \ud83e\udde0 An\u00e1lise sint\u00e1tica \u2014 constr\u00f3i a AST (\u00c1rvore Sint\u00e1tica Abstrata) <code>interpreter.py</code> \u2699\ufe0f Interpretador \u2014 executa a AST em tempo de execu\u00e7\u00e3o <code>main.py</code> \ud83d\udda5\ufe0f Orquestrador \u2014 coordena lexer, parser e interpreta\u00e7\u00e3o <code>testes.c</code> \ud83e\uddfe Arquivo de exemplo com c\u00f3digo C test\u00e1vel (na pasta <code>interpretadorPython</code>) <code>Testes/</code> \ud83d\udcc2 Diret\u00f3rio contendo arquivos <code>.c</code> para testes espec\u00edficos (na pasta <code>interpretadorPython</code>)"},{"location":"entregas/entregas2/#fluxo-de-execucao","title":"Fluxo de Execu\u00e7\u00e3o","text":"<pre><code>Inicia com o \"C\u00f3digo-fonte (.c)\".\nMostra explicitamente o `main.py` como o primeiro receptor e orquestrador (\ud83d\udda5\ufe0f).\nEm seguida, detalha o fluxo atrav\u00e9s dos componentes `lexer.py` (\ud83e\uddea), `parser.py` (\ud83e\udde0), e `interpreter.py` (\u2699\ufe0f), usando os mesmos \u00edcones e nomenclaturas da sua tabela de componentes.\nConclui com o \"Resultado Final\" (\ud83d\udce4).\n\nInput[\ud83d\udcc4 C\u00f3digo-fonte (.c)] --&gt; Main[\ud83d\udda5\ufe0f main.py]\nMain --&gt; Lexer[\ud83e\uddea lexer.py&lt;br/&gt;(An\u00e1lise L\u00e9xica/Tokeniza\u00e7\u00e3o)]\nLexer --&gt; Parser[\ud83e\udde0 parser.py&lt;br/&gt;(An\u00e1lise Sint\u00e1tica/Gera\u00e7\u00e3o de AST)]\nParser --&gt; Interpreter[\u2699\ufe0f interpreter.py&lt;br/&gt;(Interpreta\u00e7\u00e3o/Execu\u00e7\u00e3o da AST)]\nInterpreter --&gt; Output[\ud83d\udce4 Resultado Final]\n</code></pre>"},{"location":"entregas/entregas2/#exemplo-completo","title":"Exemplo Completo","text":"<p>No arquivo de testes.c com o c\u00f3digo de teste de array:</p> <pre><code>int main() {\n    int x[3];\n    x[0] = 1;\n    x[1] = 2;\n    x[2] = x[0] + x[1];\n    return x[2];\n}\n</code></pre>"},{"location":"entregas/entregas2/#espera-se-a-saida","title":"Espera-se a sa\u00edda:","text":"<pre><code>=== Analyzing testes.c ===\n\n=== TOKENIZATION ===\nLine 1: INT             = int\nLine 1: ID              = main\nLine 1: LPAREN          = (\nLine 1: RPAREN          = )\nLine 1: LBRACE          = {\nLine 2: INT             = int\nLine 2: ID              = x\nLine 2: LBRACKET        = [\nLine 2: NUMBER          = 3\nLine 2: RBRACKET        = ]\nLine 2: SEMI            = ;\nLine 3: ID              = x\nLine 3: LBRACKET        = [\nLine 3: NUMBER          = 0\nLine 3: RBRACKET        = ]\nLine 3: ASSIGN          = =\nLine 3: NUMBER          = 1\nLine 3: SEMI            = ;\nLine 4: ID              = x\nLine 4: LBRACKET        = [\nLine 4: NUMBER          = 1\nLine 4: RBRACKET        = ]\nLine 4: ASSIGN          = =\nLine 4: NUMBER          = 2\nLine 4: SEMI            = ;\nLine 5: ID              = x\nLine 5: LBRACKET        = [\nLine 5: NUMBER          = 2\nLine 5: RBRACKET        = ]\nLine 5: ASSIGN          = =\nLine 5: ID              = x\nLine 5: LBRACKET        = [\nLine 5: NUMBER          = 0\nLine 5: RBRACKET        = ]\nLine 5: PLUS            = +\nLine 5: ID              = x\nLine 5: LBRACKET        = [\nLine 5: NUMBER          = 1\nLine 5: RBRACKET        = ]\nLine 5: SEMI            = ;\nLine 6: RETURN          = return\nLine 6: ID              = x\nLine 6: LBRACKET        = [\nLine 6: NUMBER          = 2\nLine 6: RBRACKET        = ]\nLine 6: SEMI            = ;\nLine 7: RBRACE          = }\n\nTotal tokens: 47\n\n=== SYNTAX TREE ===\n\u2514\u2500 Program\n  \u2514\u2500 Function: main (returns ('type', 'int', 0))\n    \u2514\u2500 Body\n      \u2514\u2500 Array Declare: x (int)[3]\n      \u2514\u2500 Array Assign: x[0]\n        \u2514\u2500 Value\n          \u2514\u2500 Num: 1\n      \u2514\u2500 Array Assign: x[1]\n        \u2514\u2500 Value\n          \u2514\u2500 Num: 2\n      \u2514\u2500 Array Assign: x[2]\n        \u2514\u2500 Value\n          \u2514\u2500 Binop: +\n            \u2514\u2500 Left\n              \u2514\u2500 Array Access: x[0]\n            \u2514\u2500 Right\n              \u2514\u2500 Array Access: x[1]\n      \u2514\u2500 Return\n        \u2514\u2500 Value\n          \u2514\u2500 Array Access: x[2]\n\n\n=== EXECUTION ===\nVari\u00e1veis locais: {'x': {'type': 'array', 'size': 3}}\n\nVari\u00e1veis locais da fun\u00e7\u00e3o main: {}\n\n=== FINAL STATE ===\nReturn value: 3\n\nGlobal variables:\n\nArrays:\n  x: [1, 2, 3]\n\nMemory used: -3096 bytes\n</code></pre>"},{"location":"entregas/entregas2/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 18/06/2025 Desenvolvimento do t\u00f3pico da entrega 2 Felipe das Neves Lucas Soares"},{"location":"entregas/entregas3.1/","title":"Interpretador de C em Python","text":"<p>Nesta etapa, o foco foi a cria\u00e7\u00e3o de uma su\u00edte de testes para os fluxos de erro e a especifica\u00e7\u00e3o das tecnicas utilizadas para o desenvolvimento de cada funcionalidade no nosso interpretador.</p>"},{"location":"entregas/entregas3.1/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 26/06/2025 Desenvolvimento do t\u00f3pico da entrega 3.1 Felipe das Neves Lucas Soares"},{"location":"entregas/entregas3/","title":"Interpretador de C em Python","text":"<p>Nesta etapa, o foco foi a cria\u00e7\u00e3o de uma su\u00edte de testes automatizados para garantir a robustez e corretude do interpretador \u00e0 medida que novas funcionalidades s\u00e3o adicionadas ou modifica\u00e7\u00f5es s\u00e3o feitas.</p>"},{"location":"entregas/entregas3/#visao-geral","title":"Vis\u00e3o Geral","text":"<ul> <li>Tecnologias: unittest</li> </ul>"},{"location":"entregas/entregas3/#instalacao","title":"Instala\u00e7\u00e3o","text":""},{"location":"entregas/entregas3/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Python 3.8+</li> </ul>"},{"location":"entregas/entregas3/#instale-as-dependencias","title":"Instale as depend\u00eancias","text":"<pre><code>pip install -r requirements.txt\n\n</code></pre>"},{"location":"entregas/entregas3/#para-executar-faca","title":"Para executar, fa\u00e7a:","text":"<pre><code>python -m unittest test_interpreter.py\n\n</code></pre> <p>Obs.: O caso de teste pode ficar inv\u00e1lida caso a sa\u00edda for diferente do teste feito.</p>"},{"location":"entregas/entregas3/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 18/06/2025 Desenvolvimento do t\u00f3pico da entrega 3 Felipe das Neves Lucas Soares"},{"location":"interpretador/doc-interpretador/","title":"Interpretador de C em Python","text":"<p>Este documento detalha a implementa\u00e7\u00e3o de um interpretador para um subconjunto da linguagem C, desenvolvido em Python. Abordaremos a estrutura do projeto, desde a an\u00e1lise sint\u00e1tica do c\u00f3digo-fonte at\u00e9 a sua execu\u00e7\u00e3o, explicando as t\u00e9cnicas utilizadas para implementar cada funcionalidade da linguagem.</p>"},{"location":"interpretador/doc-interpretador/#estrutura-do-interpretador","title":"Estrutura do Interpretador","text":"<p>O interpretador funciona em duas fases principais:</p> <ol> <li>An\u00e1lise Sint\u00e1tica (<code>parser.py</code>): O c\u00f3digo C de entrada \u00e9 lido e transformado em uma estrutura de dados em \u00e1rvore, conhecida como \u00c1rvore Sint\u00e1tica Abstrata (AST). Essa \u00e1rvore representa a estrutura hier\u00e1rquica do programa.</li> <li>Execu\u00e7\u00e3o (<code>interpreter.py</code>): Um componente, o \"interpretador\", percorre a AST gerada na fase anterior e executa as instru\u00e7\u00f5es n\u00f3 por n\u00f3, simulando o comportamento do programa C.</li> </ol>"},{"location":"interpretador/doc-interpretador/#1-analise-sintatica-parserpy","title":"1. An\u00e1lise Sint\u00e1tica (parser.py)","text":"<p>O <code>parser.py</code> \u00e9 respons\u00e1vel por definir a gram\u00e1tica da nossa linguagem C. Ele utiliza a biblioteca <code>ply.yacc</code> para construir a AST. Cada fun\u00e7\u00e3o <code>p_...</code> define uma regra da gram\u00e1tica que reconhece uma parte da linguagem (como uma declara\u00e7\u00e3o de vari\u00e1vel, um <code>if</code>, etc.) e especifica qual n\u00f3 da AST deve ser criado.</p> <p>A AST \u00e9 composta por tuplas, onde o primeiro elemento \u00e9 uma string que identifica o tipo do n\u00f3 (ex: <code>'var_decl'</code>, <code>'if'</code>, <code>'bin_op'</code>) e os elementos seguintes s\u00e3o seus filhos (outros n\u00f3s ou valores).</p>"},{"location":"interpretador/doc-interpretador/#2-execucao-interpreterpy","title":"2. Execu\u00e7\u00e3o (interpreter.py)","text":"<p>O <code>interpreter.py</code> cont\u00e9m a classe <code>Interpreter</code>, que \u00e9 o c\u00e9rebro do projeto. Ela utiliza o padr\u00e3o de projeto Visitor para percorrer a AST. Para cada tipo de n\u00f3 definido no parser (ex: <code>'var_decl'</code>), existe um m\u00e9todo correspondente na classe <code>Interpreter</code> (ex: <code>visit_var_decl</code>).</p> <p>O interpretador mant\u00e9m uma Tabela de S\u00edmbolos (<code>self.symbol_table</code>), que \u00e9 um dicion\u00e1rio Python usado para armazenar as vari\u00e1veis e seus valores durante a execu\u00e7\u00e3o do programa.</p>"},{"location":"interpretador/doc-interpretador/#funcionalidades-da-linguagem","title":"Funcionalidades da Linguagem","text":"<p>A seguir, detalhamos como cada constru\u00e7\u00e3o da linguagem C \u00e9 tratada pelo parser e pelo interpretador.</p>"},{"location":"interpretador/doc-interpretador/#tipos-e-declaracao-de-variaveis-int","title":"Tipos e Declara\u00e7\u00e3o de Vari\u00e1veis (<code>int</code>)","text":"<p>O nosso interpretador suporta apenas o tipo de dado <code>int</code>.</p> <ul> <li>Parser:</li> </ul> <pre><code># parser.py\ndef p_declaration(p):\n    '''declaration : type_specifier ID SEMI\n                   | type_specifier ID ASSIGN expression SEMI'''\n    if len(p) == 4:\n        p[0] = ('var_decl', p[1], p[2], None) # ex: int x;\n    else:\n        p[0] = ('var_decl', p[1], p[2], p[4]) # ex: int x = 10;\n</code></pre> <ul> <li>Interpretador:</li> </ul> <pre><code># interpreter.py\ndef visit_var_decl(self, node):\n    _type, var_name, value_node = node[1:]\n    if value_node:\n        value = self.visit(value_node)\n    else:\n        value = 0  # Default value for int\n    self.symbol_table[var_name] = value\n</code></pre>"},{"location":"interpretador/doc-interpretador/#atribuicao","title":"Atribui\u00e7\u00e3o","text":"<p>Permite alterar o valor de uma vari\u00e1vel j\u00e1 declarada.</p> <ul> <li>Parser:</li> </ul> <pre><code># parser.py\ndef p_assignment(p):\n    'assignment : ID ASSIGN expression SEMI'\n    p[0] = ('assign', p[1], p[3])\n</code></pre> <ul> <li>Interpretador:</li> </ul> <pre><code># interpreter.py\ndef visit_assign(self, node):\n    var_name, value_node = node[1:]\n    if var_name not in self.symbol_table:\n        raise NameError(f\"Variable '{var_name}' not declared.\")\n    value = self.visit(value_node)\n    self.symbol_table[var_name] = value\n</code></pre>"},{"location":"interpretador/doc-interpretador/#operadores-aritmeticos-comparacao-e-logicos","title":"Operadores (Aritm\u00e9ticos, Compara\u00e7\u00e3o e L\u00f3gicos)","text":"<p>O interpretador suporta opera\u00e7\u00f5es matem\u00e1ticas, de compara\u00e7\u00e3o e l\u00f3gicas.</p> <ul> <li>Parser:</li> </ul> <pre><code># parser.py\ndef p_expression_binop(p):\n    '''expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression AND expression\n                  | expression OR expression'''\n    p[0] = ('bin_op', p[2], p[1], p[3])\n</code></pre> <ul> <li>Interpretador:</li> </ul> <pre><code># interpreter.py\ndef visit_bin_op(self, node):\n    _op, left_node, right_node = node[1:]\n    left_val = self.visit(left_node)\n    right_val = self.visit(right_node)\n\n    if _op == '+': return left_val + right_val\n    elif _op == '-': return left_val - right_val\n    elif _op == '*': return left_val * right_val\n    elif _op == '/': return left_val // right_val\n    elif _op == '==': return 1 if left_val == right_val else 0\n    elif _op == '!=': return 1 if left_val != right_val else 0\n    elif _op == '&lt;': return 1 if left_val &lt; right_val else 0\n    elif _op == '&gt;': return 1 if left_val &gt; right_val else 0\n    elif _op == '&amp;&amp;': return 1 if left_val != 0 and right_val != 0 else 0\n    elif _op == '||': return 1 if left_val != 0 or right_val != 0 else 0\n</code></pre>"},{"location":"interpretador/doc-interpretador/#estruturas-de-controle-if-else-while","title":"Estruturas de Controle (<code>if</code>, <code>else</code>, <code>while</code>)","text":"<ul> <li><code>if-else</code>:</li> </ul> <pre><code># parser.py\ndef p_if_statement(p):\n    '''if_statement : IF LPAREN expression RPAREN statement\n                    | IF LPAREN expression RPAREN statement ELSE statement'''\n    if len(p) == 6:\n        p[0] = ('if', p[3], p[5], None)\n    else:\n        p[0] = ('if', p[3], p[5], p[7])\n</code></pre> <pre><code># interpreter.py\ndef visit_if(self, node):\n    condition, true_block, false_block = node[1:]\n    if self.visit(condition) != 0:\n        self.visit(true_block)\n    elif false_block:\n        self.visit(false_block)\n</code></pre> <ul> <li><code>while</code>:</li> </ul> <pre><code># parser.py\ndef p_while_statement(p):\n    'while_statement : WHILE LPAREN expression RPAREN statement'\n    p[0] = ('while', p[3], p[5])\n</code></pre> <pre><code># interpreter.py\ndef visit_while(self, node):\n    condition, body = node[1:]\n    while self.visit(condition) != 0:\n        self.visit(body)\n</code></pre>"},{"location":"interpretador/doc-interpretador/#saida-print","title":"Sa\u00edda (<code>print</code>)","text":"<ul> <li>Parser:</li> </ul> <pre><code># parser.py\ndef p_print_statement(p):\n    'print_statement : PRINT LPAREN expression RPAREN SEMI'\n    p[0] = ('print', p[3])\n</code></pre> <ul> <li>Interpretador:</li> </ul> <pre><code># interpreter.py\ndef visit_print(self, node):\n    value = self.visit(node[1])\n    print(value)\n</code></pre>"},{"location":"interpretador/doc-interpretador/#arrays","title":"Arrays","text":"<ul> <li>Declara\u00e7\u00e3o:</li> </ul> <pre><code># parser.py\ndef p_array_declaration(p):\n    'array_declaration : type_specifier ID LBRACKET NUMBER RBRACKET SEMI'\n    p[0] = ('array_decl', p[2], p[4])\n</code></pre> <pre><code># interpreter.py\ndef visit_array_decl(self, node):\n    var_name, size = node[1:]\n    self.symbol_table[var_name] = [0] * size\n</code></pre> <ul> <li>Acesso e Atribui\u00e7\u00e3o:</li> </ul> <pre><code># parser.py\ndef p_expression_array_access(p):\n    'expression : ID LBRACKET expression RBRACKET'\n    p[0] = ('array_access', p[1], p[3])\n\ndef p_assignment_array(p):\n    'assignment : ID LBRACKET expression RBRACKET ASSIGN expression SEMI'\n    p[0] = ('array_assign', p[1], p[3], p[6])\n</code></pre> <pre><code># interpreter.py\ndef visit_array_access(self, node):\n    var_name, index_node = node[1:]\n    index = self.visit(index_node)\n    return self.symbol_table[var_name][index]\n\ndef visit_array_assign(self, node):\n    var_name, index_node, value_node = node[1:]\n    index = self.visit(index_node)\n    value = self.visit(value_node)\n    self.symbol_table[var_name][index] = value\n</code></pre>"},{"location":"interpretador/doc-interpretador/#retorno-de-funcao-return","title":"Retorno de Fun\u00e7\u00e3o (<code>return</code>)","text":"<pre><code># parser.py\ndef p_return_statement(p):\n    'return_statement : RETURN expression SEMI'\n    p[0] = ('return', p[2])\n</code></pre> <pre><code># interpreter.py\nclass ReturnValue(Exception):\n    def __init__(self, value):\n        self.value = value\n\ndef visit_return(self, node):\n    value_node = node[1]\n    raise ReturnValue(self.visit(value_node))\n\ndef interpret(self, ast):\n    try:\n        self.visit(ast)\n    except ReturnValue as e:\n        return e.value # Retorna o valor capturado\n    return 0 # C\u00f3digo de sa\u00edda padr\u00e3o se n\u00e3o houver return\n</code></pre>"},{"location":"interpretador/doc-interpretador/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) 1.0 26/06/2025 Desenvolvimento do artefato para docuementa\u00e7\u00e3o Felipe das Neves Lucas Soares"}]}